-- Generated by psc-make version 0.6.9.5
module Control.Comonad.Store.Class where
import Control.Comonad ()
import Prelude ()
import Control.Comonad.Store.Class ()
import Control.Extend ()
import Prim ()
import Prelude ()
import Control.Comonad ()
import Control.Comonad.Store.Trans ()
import Control.Extend ()
import Data.Tuple ()
class (Control.Comonad.Comonad w) <= ComonadStore s w where
  pos :: forall a. w a -> s
  peek :: forall a. s -> w a -> a
foreign import seeks :: forall s a w. (Control.Comonad.Store.Class.ComonadStore s w, Control.Extend.Extend w) => (s -> s) -> w a -> w a
foreign import seek :: forall s a w. (Control.Comonad.Store.Class.ComonadStore s w, Control.Extend.Extend w) => s -> w a -> w a
foreign import peeks :: forall s a w. (Control.Comonad.Store.Class.ComonadStore s w) => (s -> s) -> w a -> a
foreign import experiment :: forall f a w s. (Control.Comonad.Store.Class.ComonadStore s w, Prelude.Functor f) => (s -> f s) -> w a -> f a
foreign import instance comonadStoreStoreT :: (Control.Comonad.Comonad w) => Control.Comonad.Store.Class.ComonadStore s (Control.Comonad.Store.Trans.StoreT s w)
