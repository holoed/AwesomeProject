// Generated by psc-make version 0.6.9.5
"use strict";
var Prelude = require("Prelude");
var Data_Tuple = require("Data.Tuple");
var Control_Comonad_Env_Trans = require("Control.Comonad.Env.Trans");
var Control_Comonad = require("Control.Comonad");
var Control_Comonad_Env = require("Control.Comonad.Env");
var ComonadEnv = function (__superclass_Control$dotComonad$dotComonad_0, ask, local) {
    this["__superclass_Control.Comonad.Comonad_0"] = __superclass_Control$dotComonad$dotComonad_0;
    this.ask = ask;
    this.local = local;
};
var local = function (dict) {
    return dict.local;
};
var comonadEnvTuple = new ComonadEnv(function () {
    return Data_Tuple.comonadTuple;
}, Data_Tuple.fst, function (f) {
    return function (_389) {
        return new Data_Tuple.Tuple(f(_389.value0), _389.value1);
    };
});
var comonadEnvEnvT = function (__dict_Comonad_0) {
    return new ComonadEnv(function () {
        return Control_Comonad_Env_Trans.comonadEnvT(__dict_Comonad_0);
    }, function (x) {
        return Data_Tuple.fst(Control_Comonad_Env_Trans.runEnvT(x));
    }, function (f) {
        return function (x) {
            return Control_Comonad_Env_Trans.EnvT((function () {
                var _1565 = Control_Comonad_Env_Trans.runEnvT(x);
                return new Data_Tuple.Tuple(f(_1565.value0), _1565.value1);
            })());
        };
    });
};
var ask = function (dict) {
    return dict.ask;
};
var asks = function (__dict_ComonadEnv_1) {
    return function (f) {
        return function (x) {
            return f(ask(__dict_ComonadEnv_1)(x));
        };
    };
};
module.exports = {
    ComonadEnv: ComonadEnv, 
    asks: asks, 
    local: local, 
    ask: ask, 
    comonadEnvTuple: comonadEnvTuple, 
    comonadEnvEnvT: comonadEnvEnvT
};
