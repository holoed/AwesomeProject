-- Generated by psc-make version 0.6.9.5
module Control.Comonad.Env.Class where
import Data.Tuple ()
import Prelude ()
import Control.Comonad.Env.Trans ()
import Control.Comonad.Env.Class ()
import Prim ()
import Prelude ()
import Control.Comonad ()
import Control.Comonad.Env ()
import Control.Comonad.Env.Trans ()
import Data.Tuple ()
class (Control.Comonad.Comonad w) <= ComonadEnv e w where
  ask :: forall a. w a -> e
  local :: forall a. (e -> e) -> w a -> w a
foreign import asks :: forall e1 e2 w a. (Control.Comonad.Env.Class.ComonadEnv e1 w) => (e1 -> e2) -> w e1 -> e2
foreign import instance comonadEnvTuple :: Control.Comonad.Env.Class.ComonadEnv e (Data.Tuple.Tuple e)
foreign import instance comonadEnvEnvT :: (Control.Comonad.Comonad w) => Control.Comonad.Env.Class.ComonadEnv e (Control.Comonad.Env.Trans.EnvT e w)
