// Generated by psc-make version 0.6.9.5
"use strict";
var Prelude = require("Prelude");
var Control_Monad_Error_Class = require("Control.Monad.Error.Class");
var Control_Monad_Eff_Exception = require("Control.Monad.Eff.Exception");
var Control_Monad = require("Control.Monad");
var Data_Foldable = require("Data.Foldable");
var Control_Monad_Aff = require("Control.Monad.Aff");
var fail = function (msg) {
    return Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadErrorAff)(Control_Monad_Eff_Exception.error(msg));
};
var shouldContain = function (__dict_Show_0) {
    return function (__dict_Eq_1) {
        return function (__dict_Show_2) {
            return function (__dict_Foldable_3) {
                return function (c) {
                    return function (e) {
                        return Control_Monad.when(Control_Monad_Aff.monadAff)(Data_Foldable.notElem(__dict_Eq_1)(__dict_Foldable_3)(e)(c))(fail(Prelude.show(__dict_Show_0)(e) + (" \u2209 " + Prelude.show(__dict_Show_2)(c))));
                    };
                };
            };
        };
    };
};
var shouldEqual = function (__dict_Show_4) {
    return function (__dict_Eq_5) {
        return function (v1) {
            return function (v2) {
                return Control_Monad.when(Control_Monad_Aff.monadAff)(Prelude["/="](__dict_Eq_5)(v1)(v2))(fail(Prelude.show(__dict_Show_4)(v1) + (" \u2260 " + Prelude.show(__dict_Show_4)(v2))));
            };
        };
    };
};
var shouldNotEqual = function (__dict_Show_6) {
    return function (__dict_Eq_7) {
        return function (v1) {
            return function (v2) {
                return Control_Monad.when(Control_Monad_Aff.monadAff)(Prelude["=="](__dict_Eq_7)(v1)(v2))(fail(Prelude.show(__dict_Show_6)(v1) + (" = " + Prelude.show(__dict_Show_6)(v2))));
            };
        };
    };
};
module.exports = {
    shouldContain: shouldContain, 
    shouldNotEqual: shouldNotEqual, 
    shouldEqual: shouldEqual, 
    fail: fail
};
