-- Generated by psc-make version 0.6.9.5
module Control.Monad.State.Class where
import Control.Monad.State.Class ()
import Prelude ()
import Control.Monad.Trans ()
import Control.Monad.RWS ()
import Prim ()
import Prelude ()
import Control.Monad.Trans ()
import Control.Monad.State.Trans ()
import Control.Monad.Error ()
import Control.Monad.Error.Trans ()
import Control.Monad.Maybe.Trans ()
import Control.Monad.Reader.Trans ()
import Control.Monad.RWS.Trans ()
import Control.Monad.Writer.Trans ()
import Data.Monoid ()
import Data.Tuple ()
import Control.Monad.RWS ()
class MonadState s m where
  state :: forall a. (s -> Data.Tuple.Tuple a s) -> m a
foreign import modify :: forall s m. (Prelude.Monad m, Control.Monad.State.Class.MonadState s m) => (s -> s) -> m Prelude.Unit
foreign import put :: forall m s. (Prelude.Monad m, Control.Monad.State.Class.MonadState s m) => s -> m Prelude.Unit
foreign import gets :: forall s m a. (Prelude.Monad m, Control.Monad.State.Class.MonadState s m) => (s -> a) -> m a
foreign import get :: forall m s. (Prelude.Monad m, Control.Monad.State.Class.MonadState s m) => m s
foreign import instance monadStateStateT :: (Prelude.Monad m) => Control.Monad.State.Class.MonadState s (Control.Monad.State.Trans.StateT s m)
foreign import instance monadStateStateT1 :: (Prelude.Monad m, Control.Monad.State.Class.MonadState s m) => Control.Monad.State.Class.MonadState s (Control.Monad.State.Trans.StateT s1 m)
foreign import instance monadStateErrorT :: (Prelude.Monad m, Control.Monad.Error.Error e, Control.Monad.State.Class.MonadState s m) => Control.Monad.State.Class.MonadState s (Control.Monad.Error.Trans.ErrorT e m)
foreign import instance monadStateMaybeT :: (Prelude.Monad m, Control.Monad.State.Class.MonadState s m) => Control.Monad.State.Class.MonadState s (Control.Monad.Maybe.Trans.MaybeT m)
foreign import instance monadStateReaderT :: (Prelude.Monad m, Control.Monad.State.Class.MonadState s m) => Control.Monad.State.Class.MonadState s (Control.Monad.Reader.Trans.ReaderT r m)
foreign import instance monadStateWriterT :: (Prelude.Monad m, Data.Monoid.Monoid w, Control.Monad.State.Class.MonadState s m) => Control.Monad.State.Class.MonadState s (Control.Monad.Writer.Trans.WriterT w m)
foreign import instance monadStateRWST :: (Prelude.Monad m, Data.Monoid.Monoid w) => Control.Monad.State.Class.MonadState s (Control.Monad.RWS.Trans.RWST r w s m)
