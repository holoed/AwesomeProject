// Generated by psc-make version 0.6.9.5
"use strict";
var Prelude = require("Prelude");
var when = function (__dict_Monad_0) {
    return function (_105) {
        return function (m) {
            if (_105) {
                return m;
            };
            if (!_105) {
                return Prelude["return"](__dict_Monad_0)(Prelude.unit);
            };
            throw new Error("Failed pattern match");
        };
    };
};
var unless = function (__dict_Monad_1) {
    return function (_106) {
        return function (m) {
            if (!_106) {
                return m;
            };
            if (_106) {
                return Prelude["return"](__dict_Monad_1)(Prelude.unit);
            };
            throw new Error("Failed pattern match");
        };
    };
};
var replicateM = function (__dict_Monad_2) {
    return function (_103) {
        return function (m) {
            if (_103 === 0) {
                return Prelude["return"](__dict_Monad_2)([  ]);
            };
            return Prelude[">>="](__dict_Monad_2["__superclass_Prelude.Bind_1"]())(m)(function (_4) {
                return Prelude[">>="](__dict_Monad_2["__superclass_Prelude.Bind_1"]())(replicateM(__dict_Monad_2)(_103 - 1)(m))(function (_3) {
                    return Prelude["return"](__dict_Monad_2)(Prelude[":"](_4)(_3));
                });
            });
        };
    };
};
var foldM = function (__dict_Monad_3) {
    return function (f) {
        return function (a) {
            return function (_104) {
                if (_104.length === 0) {
                    return Prelude["return"](__dict_Monad_3)(a);
                };
                if (_104.length >= 1) {
                    var _766 = _104.slice(1);
                    return Prelude[">>="](__dict_Monad_3["__superclass_Prelude.Bind_1"]())(f(a)(_104[0]))(function (a$prime) {
                        return foldM(__dict_Monad_3)(f)(a$prime)(_766);
                    });
                };
                throw new Error("Failed pattern match");
            };
        };
    };
};
var filterM = function (__dict_Monad_4) {
    return function (p) {
        return function (_107) {
            if (_107.length === 0) {
                return Prelude["return"](__dict_Monad_4)([  ]);
            };
            if (_107.length >= 1) {
                var _773 = _107.slice(1);
                return Prelude[">>="](__dict_Monad_4["__superclass_Prelude.Bind_1"]())(p(_107[0]))(function (_6) {
                    return Prelude[">>="](__dict_Monad_4["__superclass_Prelude.Bind_1"]())(filterM(__dict_Monad_4)(p)(_773))(function (_5) {
                        return Prelude["return"](__dict_Monad_4)((function () {
                            if (_6) {
                                return Prelude[":"](_107[0])(_5);
                            };
                            if (!_6) {
                                return _5;
                            };
                            throw new Error("Failed pattern match");
                        })());
                    });
                });
            };
            throw new Error("Failed pattern match");
        };
    };
};
module.exports = {
    filterM: filterM, 
    unless: unless, 
    when: when, 
    foldM: foldM, 
    replicateM: replicateM
};
