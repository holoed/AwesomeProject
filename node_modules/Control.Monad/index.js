// Generated by psc-make version 0.6.9.5
"use strict";
var Prelude = require("Prelude");
var when = function (__dict_Monad_0) {
    return function (_92) {
        return function (m) {
            if (_92) {
                return m;
            };
            if (!_92) {
                return Prelude["return"](__dict_Monad_0)(Prelude.unit);
            };
            throw new Error("Failed pattern match");
        };
    };
};
var unless = function (__dict_Monad_1) {
    return function (_93) {
        return function (m) {
            if (!_93) {
                return m;
            };
            if (_93) {
                return Prelude["return"](__dict_Monad_1)(Prelude.unit);
            };
            throw new Error("Failed pattern match");
        };
    };
};
var replicateM = function (__dict_Monad_2) {
    return function (_90) {
        return function (m) {
            if (_90 === 0) {
                return Prelude["return"](__dict_Monad_2)([  ]);
            };
            return Prelude[">>="](__dict_Monad_2["__superclass_Prelude.Bind_1"]())(m)(function (_5) {
                return Prelude[">>="](__dict_Monad_2["__superclass_Prelude.Bind_1"]())(replicateM(__dict_Monad_2)(_90 - 1)(m))(function (_4) {
                    return Prelude["return"](__dict_Monad_2)(Prelude[":"](_5)(_4));
                });
            });
        };
    };
};
var foldM = function (__dict_Monad_3) {
    return function (f) {
        return function (a) {
            return function (_91) {
                if (_91.length === 0) {
                    return Prelude["return"](__dict_Monad_3)(a);
                };
                if (_91.length >= 1) {
                    var _762 = _91.slice(1);
                    return Prelude[">>="](__dict_Monad_3["__superclass_Prelude.Bind_1"]())(f(a)(_91[0]))(function (a$prime) {
                        return foldM(__dict_Monad_3)(f)(a$prime)(_762);
                    });
                };
                throw new Error("Failed pattern match");
            };
        };
    };
};
var filterM = function (__dict_Monad_4) {
    return function (p) {
        return function (_94) {
            if (_94.length === 0) {
                return Prelude["return"](__dict_Monad_4)([  ]);
            };
            if (_94.length >= 1) {
                var _769 = _94.slice(1);
                return Prelude[">>="](__dict_Monad_4["__superclass_Prelude.Bind_1"]())(p(_94[0]))(function (_7) {
                    return Prelude[">>="](__dict_Monad_4["__superclass_Prelude.Bind_1"]())(filterM(__dict_Monad_4)(p)(_769))(function (_6) {
                        return Prelude["return"](__dict_Monad_4)((function () {
                            if (_7) {
                                return Prelude[":"](_94[0])(_6);
                            };
                            if (!_7) {
                                return _6;
                            };
                            throw new Error("Failed pattern match");
                        })());
                    });
                });
            };
            throw new Error("Failed pattern match");
        };
    };
};
module.exports = {
    filterM: filterM, 
    unless: unless, 
    when: when, 
    foldM: foldM, 
    replicateM: replicateM
};
