// Generated by psc-make version 0.6.9.5
"use strict";
var Prelude = require("Prelude");
var Data_Foldable = require("Data.Foldable");
var Data_Tuple = require("Data.Tuple");
var Data_Traversable = require("Data.Traversable");
var Data_Array = require("Data.Array");
var Data_Maybe = require("Data.Maybe");
var Data_Monoid = require("Data.Monoid");
var Leaf = (function () {
    function Leaf() {

    };
    Leaf.value = new Leaf();
    return Leaf;
})();
var Two = (function () {
    function Two(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    Two.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new Two(value0, value1, value2, value3);
                };
            };
        };
    };
    return Two;
})();
var Three = (function () {
    function Three(value0, value1, value2, value3, value4, value5, value6) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
        this.value6 = value6;
    };
    Three.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return function (value6) {
                                return new Three(value0, value1, value2, value3, value4, value5, value6);
                            };
                        };
                    };
                };
            };
        };
    };
    return Three;
})();
var TwoLeft = (function () {
    function TwoLeft(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    TwoLeft.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new TwoLeft(value0, value1, value2);
            };
        };
    };
    return TwoLeft;
})();
var TwoRight = (function () {
    function TwoRight(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    TwoRight.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new TwoRight(value0, value1, value2);
            };
        };
    };
    return TwoRight;
})();
var ThreeLeft = (function () {
    function ThreeLeft(value0, value1, value2, value3, value4, value5) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
    };
    ThreeLeft.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return new ThreeLeft(value0, value1, value2, value3, value4, value5);
                        };
                    };
                };
            };
        };
    };
    return ThreeLeft;
})();
var ThreeMiddle = (function () {
    function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
    };
    ThreeMiddle.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
                        };
                    };
                };
            };
        };
    };
    return ThreeMiddle;
})();
var ThreeRight = (function () {
    function ThreeRight(value0, value1, value2, value3, value4, value5) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
    };
    ThreeRight.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return new ThreeRight(value0, value1, value2, value3, value4, value5);
                        };
                    };
                };
            };
        };
    };
    return ThreeRight;
})();
var KickUp = (function () {
    function KickUp(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    KickUp.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new KickUp(value0, value1, value2, value3);
                };
            };
        };
    };
    return KickUp;
})();
var values = function (_420) {
    if (_420 instanceof Leaf) {
        return [  ];
    };
    if (_420 instanceof Two) {
        return Prelude["++"](Data_Array.semigroupArray)(values(_420.value0))(Prelude["++"](Data_Array.semigroupArray)([ _420.value2 ])(values(_420.value3)));
    };
    if (_420 instanceof Three) {
        return Prelude["++"](Data_Array.semigroupArray)(values(_420.value0))(Prelude["++"](Data_Array.semigroupArray)([ _420.value2 ])(Prelude["++"](Data_Array.semigroupArray)(values(_420.value3))(Prelude["++"](Data_Array.semigroupArray)([ _420.value5 ])(values(_420.value6)))));
    };
    throw new Error("Failed pattern match");
};
var toList = function (_418) {
    if (_418 instanceof Leaf) {
        return [  ];
    };
    if (_418 instanceof Two) {
        return Prelude["++"](Data_Array.semigroupArray)(toList(_418.value0))(Prelude["++"](Data_Array.semigroupArray)([ new Data_Tuple.Tuple(_418.value1, _418.value2) ])(toList(_418.value3)));
    };
    if (_418 instanceof Three) {
        return Prelude["++"](Data_Array.semigroupArray)(toList(_418.value0))(Prelude["++"](Data_Array.semigroupArray)([ new Data_Tuple.Tuple(_418.value1, _418.value2) ])(Prelude["++"](Data_Array.semigroupArray)(toList(_418.value3))(Prelude["++"](Data_Array.semigroupArray)([ new Data_Tuple.Tuple(_418.value4, _418.value5) ])(toList(_418.value6)))));
    };
    throw new Error("Failed pattern match");
};
var size = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Array.length)(values);
var singleton = function (k) {
    return function (v) {
        return new Two(Leaf.value, k, v, Leaf.value);
    };
};
var showTree = function (__dict_Show_0) {
    return function (__dict_Show_1) {
        return function (_413) {
            if (_413 instanceof Leaf) {
                return "Leaf";
            };
            if (_413 instanceof Two) {
                return "Two (" + (showTree(__dict_Show_0)(__dict_Show_1)(_413.value0) + (") (" + (Prelude.show(__dict_Show_0)(_413.value1) + (") (" + (Prelude.show(__dict_Show_1)(_413.value2) + (") (" + (showTree(__dict_Show_0)(__dict_Show_1)(_413.value3) + ")")))))));
            };
            if (_413 instanceof Three) {
                return "Three (" + (showTree(__dict_Show_0)(__dict_Show_1)(_413.value0) + (") (" + (Prelude.show(__dict_Show_0)(_413.value1) + (") (" + (Prelude.show(__dict_Show_1)(_413.value2) + (") (" + (showTree(__dict_Show_0)(__dict_Show_1)(_413.value3) + (") (" + (Prelude.show(__dict_Show_0)(_413.value4) + (") (" + (Prelude.show(__dict_Show_1)(_413.value5) + (") (" + (showTree(__dict_Show_0)(__dict_Show_1)(_413.value6) + ")")))))))))))));
            };
            throw new Error("Failed pattern match");
        };
    };
};
var showMap = function (__dict_Show_2) {
    return function (__dict_Show_3) {
        return new Prelude.Show(function (m) {
            return "fromList " + Prelude.show(Prelude.showArray(Data_Tuple.showTuple(__dict_Show_2)(__dict_Show_3)))(toList(m));
        });
    };
};
var lookup = function (__copy___dict_Ord_6) {
    return function (__copy_k) {
        return function (__copy__415) {
            var __dict_Ord_6 = __copy___dict_Ord_6;
            var k = __copy_k;
            var _415 = __copy__415;
            tco: while (true) {
                if (_415 instanceof Leaf) {
                    return Data_Maybe.Nothing.value;
                };
                if (_415 instanceof Two && Prelude["=="](__dict_Ord_6["__superclass_Prelude.Eq_0"]())(k)(_415.value1)) {
                    return new Data_Maybe.Just(_415.value2);
                };
                if (_415 instanceof Two && Prelude["<"](__dict_Ord_6)(k)(_415.value1)) {
                    var __tco___dict_Ord_6 = __dict_Ord_6;
                    var __tco_k = k;
                    var __tco__415 = _415.value0;
                    __dict_Ord_6 = __tco___dict_Ord_6;
                    k = __tco_k;
                    _415 = __tco__415;
                    continue tco;
                };
                if (_415 instanceof Two) {
                    var __tco___dict_Ord_6 = __dict_Ord_6;
                    var __tco_k = k;
                    var __tco__415 = _415.value3;
                    __dict_Ord_6 = __tco___dict_Ord_6;
                    k = __tco_k;
                    _415 = __tco__415;
                    continue tco;
                };
                if (_415 instanceof Three && Prelude["=="](__dict_Ord_6["__superclass_Prelude.Eq_0"]())(k)(_415.value1)) {
                    return new Data_Maybe.Just(_415.value2);
                };
                if (_415 instanceof Three && Prelude["=="](__dict_Ord_6["__superclass_Prelude.Eq_0"]())(k)(_415.value4)) {
                    return new Data_Maybe.Just(_415.value5);
                };
                if (_415 instanceof Three && Prelude["<"](__dict_Ord_6)(k)(_415.value1)) {
                    var __tco___dict_Ord_6 = __dict_Ord_6;
                    var __tco_k = k;
                    var __tco__415 = _415.value0;
                    __dict_Ord_6 = __tco___dict_Ord_6;
                    k = __tco_k;
                    _415 = __tco__415;
                    continue tco;
                };
                if (_415 instanceof Three && (Prelude["<"](__dict_Ord_6)(_415.value1)(k) && Prelude["<="](__dict_Ord_6)(k)(_415.value4))) {
                    var __tco___dict_Ord_6 = __dict_Ord_6;
                    var __tco_k = k;
                    var __tco__415 = _415.value3;
                    __dict_Ord_6 = __tco___dict_Ord_6;
                    k = __tco_k;
                    _415 = __tco__415;
                    continue tco;
                };
                if (_415 instanceof Three) {
                    var __tco___dict_Ord_6 = __dict_Ord_6;
                    var __tco_k = k;
                    var __tco__415 = _415.value6;
                    __dict_Ord_6 = __tco___dict_Ord_6;
                    k = __tco_k;
                    _415 = __tco__415;
                    continue tco;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
};
var member = function (__dict_Ord_7) {
    return function (k) {
        return function (m) {
            return Data_Maybe.isJust(lookup(__dict_Ord_7)(k)(m));
        };
    };
};
var keys = function (_419) {
    if (_419 instanceof Leaf) {
        return [  ];
    };
    if (_419 instanceof Two) {
        return Prelude["++"](Data_Array.semigroupArray)(keys(_419.value0))(Prelude["++"](Data_Array.semigroupArray)([ _419.value1 ])(keys(_419.value3)));
    };
    if (_419 instanceof Three) {
        return Prelude["++"](Data_Array.semigroupArray)(keys(_419.value0))(Prelude["++"](Data_Array.semigroupArray)([ _419.value1 ])(Prelude["++"](Data_Array.semigroupArray)(keys(_419.value3))(Prelude["++"](Data_Array.semigroupArray)([ _419.value4 ])(keys(_419.value6)))));
    };
    throw new Error("Failed pattern match");
};
var isEmpty = function (_414) {
    if (_414 instanceof Leaf) {
        return true;
    };
    return false;
};
var functorMap = new Prelude.Functor(function (f) {
    return function (_421) {
        if (_421 instanceof Leaf) {
            return Leaf.value;
        };
        if (_421 instanceof Two) {
            return new Two(Prelude["<$>"](functorMap)(f)(_421.value0), _421.value1, f(_421.value2), Prelude["<$>"](functorMap)(f)(_421.value3));
        };
        if (_421 instanceof Three) {
            return new Three(Prelude["<$>"](functorMap)(f)(_421.value0), _421.value1, f(_421.value2), Prelude["<$>"](functorMap)(f)(_421.value3), _421.value4, f(_421.value5), Prelude["<$>"](functorMap)(f)(_421.value6));
        };
        throw new Error("Failed pattern match");
    };
});
var map = Prelude["<$>"](functorMap);
var fromZipper = function (__copy___dict_Ord_8) {
    return function (__copy__416) {
        return function (__copy__417) {
            var __dict_Ord_8 = __copy___dict_Ord_8;
            var _416 = __copy__416;
            var _417 = __copy__417;
            tco: while (true) {
                if (_416.length === 0) {
                    return _417;
                };
                if (_416.length >= 1) {
                    var _1757 = _416.slice(1);
                    if (_416[0] instanceof TwoLeft) {
                        var __tco___dict_Ord_8 = __dict_Ord_8;
                        var __tco__417 = new Two(_417, (_416[0]).value0, (_416[0]).value1, (_416[0]).value2);
                        __dict_Ord_8 = __tco___dict_Ord_8;
                        _416 = _1757;
                        _417 = __tco__417;
                        continue tco;
                    };
                };
                if (_416.length >= 1) {
                    var _1762 = _416.slice(1);
                    if (_416[0] instanceof TwoRight) {
                        var __tco___dict_Ord_8 = __dict_Ord_8;
                        var __tco__417 = new Two((_416[0]).value0, (_416[0]).value1, (_416[0]).value2, _417);
                        __dict_Ord_8 = __tco___dict_Ord_8;
                        _416 = _1762;
                        _417 = __tco__417;
                        continue tco;
                    };
                };
                if (_416.length >= 1) {
                    var _1770 = _416.slice(1);
                    if (_416[0] instanceof ThreeLeft) {
                        var __tco___dict_Ord_8 = __dict_Ord_8;
                        var __tco__417 = new Three(_417, (_416[0]).value0, (_416[0]).value1, (_416[0]).value2, (_416[0]).value3, (_416[0]).value4, (_416[0]).value5);
                        __dict_Ord_8 = __tco___dict_Ord_8;
                        _416 = _1770;
                        _417 = __tco__417;
                        continue tco;
                    };
                };
                if (_416.length >= 1) {
                    var _1778 = _416.slice(1);
                    if (_416[0] instanceof ThreeMiddle) {
                        var __tco___dict_Ord_8 = __dict_Ord_8;
                        var __tco__417 = new Three((_416[0]).value0, (_416[0]).value1, (_416[0]).value2, _417, (_416[0]).value3, (_416[0]).value4, (_416[0]).value5);
                        __dict_Ord_8 = __tco___dict_Ord_8;
                        _416 = _1778;
                        _417 = __tco__417;
                        continue tco;
                    };
                };
                if (_416.length >= 1) {
                    var _1786 = _416.slice(1);
                    if (_416[0] instanceof ThreeRight) {
                        var __tco___dict_Ord_8 = __dict_Ord_8;
                        var __tco__417 = new Three((_416[0]).value0, (_416[0]).value1, (_416[0]).value2, (_416[0]).value3, (_416[0]).value4, (_416[0]).value5, _417);
                        __dict_Ord_8 = __tco___dict_Ord_8;
                        _416 = _1786;
                        _417 = __tco__417;
                        continue tco;
                    };
                };
                throw new Error("Failed pattern match");
            };
        };
    };
};
var insert = function (__dict_Ord_9) {
    var up = function (__copy___dict_Ord_10) {
        return function (__copy__424) {
            return function (__copy__425) {
                var __dict_Ord_10 = __copy___dict_Ord_10;
                var _424 = __copy__424;
                var _425 = __copy__425;
                tco: while (true) {
                    if (_424.length === 0) {
                        return new Two(_425.value0, _425.value1, _425.value2, _425.value3);
                    };
                    if (_424.length >= 1) {
                        var _1801 = _424.slice(1);
                        if (_424[0] instanceof TwoLeft) {
                            return fromZipper(__dict_Ord_10)(_1801)(new Three(_425.value0, _425.value1, _425.value2, _425.value3, (_424[0]).value0, (_424[0]).value1, (_424[0]).value2));
                        };
                    };
                    if (_424.length >= 1) {
                        var _1810 = _424.slice(1);
                        if (_424[0] instanceof TwoRight) {
                            return fromZipper(__dict_Ord_10)(_1810)(new Three((_424[0]).value0, (_424[0]).value1, (_424[0]).value2, _425.value0, _425.value1, _425.value2, _425.value3));
                        };
                    };
                    if (_424.length >= 1) {
                        var _1822 = _424.slice(1);
                        if (_424[0] instanceof ThreeLeft) {
                            var __tco___dict_Ord_10 = __dict_Ord_10;
                            var __tco__425 = new KickUp(new Two(_425.value0, _425.value1, _425.value2, _425.value3), (_424[0]).value0, (_424[0]).value1, new Two((_424[0]).value2, (_424[0]).value3, (_424[0]).value4, (_424[0]).value5));
                            __dict_Ord_10 = __tco___dict_Ord_10;
                            _424 = _1822;
                            _425 = __tco__425;
                            continue tco;
                        };
                    };
                    if (_424.length >= 1) {
                        var _1834 = _424.slice(1);
                        if (_424[0] instanceof ThreeMiddle) {
                            var __tco___dict_Ord_10 = __dict_Ord_10;
                            var __tco__425 = new KickUp(new Two((_424[0]).value0, (_424[0]).value1, (_424[0]).value2, _425.value0), _425.value1, _425.value2, new Two(_425.value3, (_424[0]).value3, (_424[0]).value4, (_424[0]).value5));
                            __dict_Ord_10 = __tco___dict_Ord_10;
                            _424 = _1834;
                            _425 = __tco__425;
                            continue tco;
                        };
                    };
                    if (_424.length >= 1) {
                        var _1846 = _424.slice(1);
                        if (_424[0] instanceof ThreeRight) {
                            var __tco___dict_Ord_10 = __dict_Ord_10;
                            var __tco__425 = new KickUp(new Two((_424[0]).value0, (_424[0]).value1, (_424[0]).value2, (_424[0]).value3), (_424[0]).value4, (_424[0]).value5, new Two(_425.value0, _425.value1, _425.value2, _425.value3));
                            __dict_Ord_10 = __tco___dict_Ord_10;
                            _424 = _1846;
                            _425 = __tco__425;
                            continue tco;
                        };
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var down = function (__copy___dict_Ord_11) {
        return function (__copy_ctx) {
            return function (__copy_k) {
                return function (__copy_v) {
                    return function (__copy__423) {
                        var __dict_Ord_11 = __copy___dict_Ord_11;
                        var ctx = __copy_ctx;
                        var k = __copy_k;
                        var v = __copy_v;
                        var _423 = __copy__423;
                        tco: while (true) {
                            if (_423 instanceof Leaf) {
                                return up(__dict_Ord_11)(ctx)(new KickUp(Leaf.value, k, v, Leaf.value));
                            };
                            if (_423 instanceof Two && Prelude["=="](__dict_Ord_11["__superclass_Prelude.Eq_0"]())(k)(_423.value1)) {
                                return fromZipper(__dict_Ord_11)(ctx)(new Two(_423.value0, k, v, _423.value3));
                            };
                            if (_423 instanceof Two && Prelude["<"](__dict_Ord_11)(k)(_423.value1)) {
                                var __tco___dict_Ord_11 = __dict_Ord_11;
                                var __tco_ctx = Prelude[":"](new TwoLeft(_423.value1, _423.value2, _423.value3))(ctx);
                                var __tco_k = k;
                                var __tco_v = v;
                                var __tco__423 = _423.value0;
                                __dict_Ord_11 = __tco___dict_Ord_11;
                                ctx = __tco_ctx;
                                k = __tco_k;
                                v = __tco_v;
                                _423 = __tco__423;
                                continue tco;
                            };
                            if (_423 instanceof Two) {
                                var __tco___dict_Ord_11 = __dict_Ord_11;
                                var __tco_ctx = Prelude[":"](new TwoRight(_423.value0, _423.value1, _423.value2))(ctx);
                                var __tco_k = k;
                                var __tco_v = v;
                                var __tco__423 = _423.value3;
                                __dict_Ord_11 = __tco___dict_Ord_11;
                                ctx = __tco_ctx;
                                k = __tco_k;
                                v = __tco_v;
                                _423 = __tco__423;
                                continue tco;
                            };
                            if (_423 instanceof Three && Prelude["=="](__dict_Ord_11["__superclass_Prelude.Eq_0"]())(k)(_423.value1)) {
                                return fromZipper(__dict_Ord_11)(ctx)(new Three(_423.value0, k, v, _423.value3, _423.value4, _423.value5, _423.value6));
                            };
                            if (_423 instanceof Three && Prelude["=="](__dict_Ord_11["__superclass_Prelude.Eq_0"]())(k)(_423.value4)) {
                                return fromZipper(__dict_Ord_11)(ctx)(new Three(_423.value0, _423.value1, _423.value2, _423.value3, k, v, _423.value6));
                            };
                            if (_423 instanceof Three && Prelude["<"](__dict_Ord_11)(k)(_423.value1)) {
                                var __tco___dict_Ord_11 = __dict_Ord_11;
                                var __tco_ctx = Prelude[":"](new ThreeLeft(_423.value1, _423.value2, _423.value3, _423.value4, _423.value5, _423.value6))(ctx);
                                var __tco_k = k;
                                var __tco_v = v;
                                var __tco__423 = _423.value0;
                                __dict_Ord_11 = __tco___dict_Ord_11;
                                ctx = __tco_ctx;
                                k = __tco_k;
                                v = __tco_v;
                                _423 = __tco__423;
                                continue tco;
                            };
                            if (_423 instanceof Three && (Prelude["<"](__dict_Ord_11)(_423.value1)(k) && Prelude["<="](__dict_Ord_11)(k)(_423.value4))) {
                                var __tco___dict_Ord_11 = __dict_Ord_11;
                                var __tco_ctx = Prelude[":"](new ThreeMiddle(_423.value0, _423.value1, _423.value2, _423.value4, _423.value5, _423.value6))(ctx);
                                var __tco_k = k;
                                var __tco_v = v;
                                var __tco__423 = _423.value3;
                                __dict_Ord_11 = __tco___dict_Ord_11;
                                ctx = __tco_ctx;
                                k = __tco_k;
                                v = __tco_v;
                                _423 = __tco__423;
                                continue tco;
                            };
                            if (_423 instanceof Three) {
                                var __tco___dict_Ord_11 = __dict_Ord_11;
                                var __tco_ctx = Prelude[":"](new ThreeRight(_423.value0, _423.value1, _423.value2, _423.value3, _423.value4, _423.value5))(ctx);
                                var __tco_k = k;
                                var __tco_v = v;
                                var __tco__423 = _423.value6;
                                __dict_Ord_11 = __tco___dict_Ord_11;
                                ctx = __tco_ctx;
                                k = __tco_k;
                                v = __tco_v;
                                _423 = __tco__423;
                                continue tco;
                            };
                            throw new Error("Failed pattern match");
                        };
                    };
                };
            };
        };
    };
    return down(__dict_Ord_9)([  ]);
};
var foldableMap = new Data_Foldable.Foldable(function (__dict_Monoid_12) {
    return function (f) {
        return function (m) {
            return Data_Foldable.foldMap(Data_Foldable.foldableArray)(__dict_Monoid_12)(f)(values(m));
        };
    };
}, function (f) {
    return function (z) {
        return function (m) {
            return Data_Foldable.foldl(Data_Foldable.foldableArray)(f)(z)(values(m));
        };
    };
}, function (f) {
    return function (z) {
        return function (m) {
            return Data_Foldable.foldr(Data_Foldable.foldableArray)(f)(z)(values(m));
        };
    };
});
var eqMap = function (__dict_Eq_13) {
    return function (__dict_Eq_14) {
        return new Prelude.Eq(function (m1) {
            return function (m2) {
                return !Prelude["=="](eqMap(__dict_Eq_13)(__dict_Eq_14))(m1)(m2);
            };
        }, function (m1) {
            return function (m2) {
                return Prelude["=="](Prelude.eqArray(Data_Tuple.eqTuple(__dict_Eq_13)(__dict_Eq_14)))(toList(m1))(toList(m2));
            };
        });
    };
};
var ordMap = function (__dict_Ord_4) {
    return function (__dict_Ord_5) {
        return new Prelude.Ord(function () {
            return eqMap(__dict_Ord_4["__superclass_Prelude.Eq_0"]())(__dict_Ord_5["__superclass_Prelude.Eq_0"]());
        }, function (m1) {
            return function (m2) {
                return Prelude.compare(Prelude.ordArray(Data_Tuple.ordTuple(__dict_Ord_4)(__dict_Ord_5)))(toList(m1))(toList(m2));
            };
        });
    };
};
var empty = Leaf.value;
var fromList = function (__dict_Ord_15) {
    return Data_Foldable.foldl(Data_Foldable.foldableArray)(function (m) {
        return function (_411) {
            return insert(__dict_Ord_15)(_411.value0)(_411.value1)(m);
        };
    })(empty);
};
var $$delete = function (__dict_Ord_17) {
    var up = function (__copy___dict_Ord_18) {
        return function (__copy__427) {
            return function (__copy__428) {
                var __dict_Ord_18 = __copy___dict_Ord_18;
                var _427 = __copy__427;
                var _428 = __copy__428;
                tco: while (true) {
                    if (_427.length === 0) {
                        return _428;
                    };
                    if (_427.length >= 1) {
                        var _1907 = _427.slice(1);
                        if (_427[0] instanceof TwoLeft && ((_427[0]).value2 instanceof Leaf && _428 instanceof Leaf)) {
                            return fromZipper(__dict_Ord_18)(_1907)(new Two(Leaf.value, (_427[0]).value0, (_427[0]).value1, Leaf.value));
                        };
                    };
                    if (_427.length >= 1) {
                        var _1912 = _427.slice(1);
                        if (_427[0] instanceof TwoRight && ((_427[0]).value0 instanceof Leaf && _428 instanceof Leaf)) {
                            return fromZipper(__dict_Ord_18)(_1912)(new Two(Leaf.value, (_427[0]).value1, (_427[0]).value2, Leaf.value));
                        };
                    };
                    if (_427.length >= 1) {
                        var _1921 = _427.slice(1);
                        if (_427[0] instanceof TwoLeft && (_427[0]).value2 instanceof Two) {
                            var __tco___dict_Ord_18 = __dict_Ord_18;
                            var __tco__428 = new Three(_428, (_427[0]).value0, (_427[0]).value1, (_427[0]).value2.value0, (_427[0]).value2.value1, (_427[0]).value2.value2, (_427[0]).value2.value3);
                            __dict_Ord_18 = __tco___dict_Ord_18;
                            _427 = _1921;
                            _428 = __tco__428;
                            continue tco;
                        };
                    };
                    if (_427.length >= 1) {
                        var _1930 = _427.slice(1);
                        if (_427[0] instanceof TwoRight && (_427[0]).value0 instanceof Two) {
                            var __tco___dict_Ord_18 = __dict_Ord_18;
                            var __tco__428 = new Three((_427[0]).value0.value0, (_427[0]).value0.value1, (_427[0]).value0.value2, (_427[0]).value0.value3, (_427[0]).value1, (_427[0]).value2, _428);
                            __dict_Ord_18 = __tco___dict_Ord_18;
                            _427 = _1930;
                            _428 = __tco__428;
                            continue tco;
                        };
                    };
                    if (_427.length >= 1) {
                        var _1942 = _427.slice(1);
                        if (_427[0] instanceof TwoLeft && (_427[0]).value2 instanceof Three) {
                            return fromZipper(__dict_Ord_18)(_1942)(new Two(new Two(_428, (_427[0]).value0, (_427[0]).value1, (_427[0]).value2.value0), (_427[0]).value2.value1, (_427[0]).value2.value2, new Two((_427[0]).value2.value3, (_427[0]).value2.value4, (_427[0]).value2.value5, (_427[0]).value2.value6)));
                        };
                    };
                    if (_427.length >= 1) {
                        var _1954 = _427.slice(1);
                        if (_427[0] instanceof TwoRight && (_427[0]).value0 instanceof Three) {
                            return fromZipper(__dict_Ord_18)(_1954)(new Two(new Two((_427[0]).value0.value0, (_427[0]).value0.value1, (_427[0]).value0.value2, (_427[0]).value0.value3), (_427[0]).value0.value4, (_427[0]).value0.value5, new Two((_427[0]).value0.value6, (_427[0]).value1, (_427[0]).value2, _428)));
                        };
                    };
                    if (_427.length >= 1) {
                        var _1962 = _427.slice(1);
                        if (_427[0] instanceof ThreeLeft && ((_427[0]).value2 instanceof Leaf && ((_427[0]).value5 instanceof Leaf && _428 instanceof Leaf))) {
                            return fromZipper(__dict_Ord_18)(_1962)(new Three(Leaf.value, (_427[0]).value0, (_427[0]).value1, Leaf.value, (_427[0]).value3, (_427[0]).value4, Leaf.value));
                        };
                    };
                    if (_427.length >= 1) {
                        var _1970 = _427.slice(1);
                        if (_427[0] instanceof ThreeMiddle && ((_427[0]).value0 instanceof Leaf && ((_427[0]).value5 instanceof Leaf && _428 instanceof Leaf))) {
                            return fromZipper(__dict_Ord_18)(_1970)(new Three(Leaf.value, (_427[0]).value1, (_427[0]).value2, Leaf.value, (_427[0]).value3, (_427[0]).value4, Leaf.value));
                        };
                    };
                    if (_427.length >= 1) {
                        var _1978 = _427.slice(1);
                        if (_427[0] instanceof ThreeRight && ((_427[0]).value0 instanceof Leaf && ((_427[0]).value3 instanceof Leaf && _428 instanceof Leaf))) {
                            return fromZipper(__dict_Ord_18)(_1978)(new Three(Leaf.value, (_427[0]).value1, (_427[0]).value2, Leaf.value, (_427[0]).value4, (_427[0]).value5, Leaf.value));
                        };
                    };
                    if (_427.length >= 1) {
                        var _1990 = _427.slice(1);
                        if (_427[0] instanceof ThreeLeft && (_427[0]).value2 instanceof Two) {
                            return fromZipper(__dict_Ord_18)(_1990)(new Two(new Three(_428, (_427[0]).value0, (_427[0]).value1, (_427[0]).value2.value0, (_427[0]).value2.value1, (_427[0]).value2.value2, (_427[0]).value2.value3), (_427[0]).value3, (_427[0]).value4, (_427[0]).value5));
                        };
                    };
                    if (_427.length >= 1) {
                        var _2002 = _427.slice(1);
                        if (_427[0] instanceof ThreeMiddle && (_427[0]).value0 instanceof Two) {
                            return fromZipper(__dict_Ord_18)(_2002)(new Two(new Three((_427[0]).value0.value0, (_427[0]).value0.value1, (_427[0]).value0.value2, (_427[0]).value0.value3, (_427[0]).value1, (_427[0]).value2, _428), (_427[0]).value3, (_427[0]).value4, (_427[0]).value5));
                        };
                    };
                    if (_427.length >= 1) {
                        var _2014 = _427.slice(1);
                        if (_427[0] instanceof ThreeMiddle && (_427[0]).value5 instanceof Two) {
                            return fromZipper(__dict_Ord_18)(_2014)(new Two((_427[0]).value0, (_427[0]).value1, (_427[0]).value2, new Three(_428, (_427[0]).value3, (_427[0]).value4, (_427[0]).value5.value0, (_427[0]).value5.value1, (_427[0]).value5.value2, (_427[0]).value5.value3)));
                        };
                    };
                    if (_427.length >= 1) {
                        var _2026 = _427.slice(1);
                        if (_427[0] instanceof ThreeRight && (_427[0]).value3 instanceof Two) {
                            return fromZipper(__dict_Ord_18)(_2026)(new Two((_427[0]).value0, (_427[0]).value1, (_427[0]).value2, new Three((_427[0]).value3.value0, (_427[0]).value3.value1, (_427[0]).value3.value2, (_427[0]).value3.value3, (_427[0]).value4, (_427[0]).value5, _428)));
                        };
                    };
                    if (_427.length >= 1) {
                        var _2041 = _427.slice(1);
                        if (_427[0] instanceof ThreeLeft && (_427[0]).value2 instanceof Three) {
                            return fromZipper(__dict_Ord_18)(_2041)(new Three(new Two(_428, (_427[0]).value0, (_427[0]).value1, (_427[0]).value2.value0), (_427[0]).value2.value1, (_427[0]).value2.value2, new Two((_427[0]).value2.value3, (_427[0]).value2.value4, (_427[0]).value2.value5, (_427[0]).value2.value6), (_427[0]).value3, (_427[0]).value4, (_427[0]).value5));
                        };
                    };
                    if (_427.length >= 1) {
                        var _2056 = _427.slice(1);
                        if (_427[0] instanceof ThreeMiddle && (_427[0]).value0 instanceof Three) {
                            return fromZipper(__dict_Ord_18)(_2056)(new Three(new Two((_427[0]).value0.value0, (_427[0]).value0.value1, (_427[0]).value0.value2, (_427[0]).value0.value3), (_427[0]).value0.value4, (_427[0]).value0.value5, new Two((_427[0]).value0.value6, (_427[0]).value1, (_427[0]).value2, _428), (_427[0]).value3, (_427[0]).value4, (_427[0]).value5));
                        };
                    };
                    if (_427.length >= 1) {
                        var _2071 = _427.slice(1);
                        if (_427[0] instanceof ThreeMiddle && (_427[0]).value5 instanceof Three) {
                            return fromZipper(__dict_Ord_18)(_2071)(new Three((_427[0]).value0, (_427[0]).value1, (_427[0]).value2, new Two(_428, (_427[0]).value3, (_427[0]).value4, (_427[0]).value5.value0), (_427[0]).value5.value1, (_427[0]).value5.value2, new Two((_427[0]).value5.value3, (_427[0]).value5.value4, (_427[0]).value5.value5, (_427[0]).value5.value6)));
                        };
                    };
                    if (_427.length >= 1) {
                        var _2086 = _427.slice(1);
                        if (_427[0] instanceof ThreeRight && (_427[0]).value3 instanceof Three) {
                            return fromZipper(__dict_Ord_18)(_2086)(new Three((_427[0]).value0, (_427[0]).value1, (_427[0]).value2, new Two((_427[0]).value3.value0, (_427[0]).value3.value1, (_427[0]).value3.value2, (_427[0]).value3.value3), (_427[0]).value3.value4, (_427[0]).value3.value5, new Two((_427[0]).value3.value6, (_427[0]).value4, (_427[0]).value5, _428)));
                        };
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var removeMaxNode = function (__copy___dict_Ord_19) {
        return function (__copy_ctx) {
            return function (__copy__430) {
                var __dict_Ord_19 = __copy___dict_Ord_19;
                var ctx = __copy_ctx;
                var _430 = __copy__430;
                tco: while (true) {
                    if (_430 instanceof Two && (_430.value0 instanceof Leaf && _430.value3 instanceof Leaf)) {
                        return up(__dict_Ord_19)(ctx)(Leaf.value);
                    };
                    if (_430 instanceof Two) {
                        var __tco___dict_Ord_19 = __dict_Ord_19;
                        var __tco_ctx = Prelude[":"](new TwoRight(_430.value0, _430.value1, _430.value2))(ctx);
                        var __tco__430 = _430.value3;
                        __dict_Ord_19 = __tco___dict_Ord_19;
                        ctx = __tco_ctx;
                        _430 = __tco__430;
                        continue tco;
                    };
                    if (_430 instanceof Three && (_430.value0 instanceof Leaf && (_430.value3 instanceof Leaf && _430.value6 instanceof Leaf))) {
                        return up(__dict_Ord_19)(Prelude[":"](new TwoRight(Leaf.value, _430.value1, _430.value2))(ctx))(Leaf.value);
                    };
                    if (_430 instanceof Three) {
                        var __tco___dict_Ord_19 = __dict_Ord_19;
                        var __tco_ctx = Prelude[":"](new ThreeRight(_430.value0, _430.value1, _430.value2, _430.value3, _430.value4, _430.value5))(ctx);
                        var __tco__430 = _430.value6;
                        __dict_Ord_19 = __tco___dict_Ord_19;
                        ctx = __tco_ctx;
                        _430 = __tco__430;
                        continue tco;
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var maxNode = function (__copy___dict_Ord_20) {
        return function (__copy__429) {
            var __dict_Ord_20 = __copy___dict_Ord_20;
            var _429 = __copy__429;
            tco: while (true) {
                if (_429 instanceof Two && _429.value3 instanceof Leaf) {
                    return {
                        key: _429.value1, 
                        value: _429.value2
                    };
                };
                if (_429 instanceof Two) {
                    var __tco___dict_Ord_20 = __dict_Ord_20;
                    var __tco__429 = _429.value3;
                    __dict_Ord_20 = __tco___dict_Ord_20;
                    _429 = __tco__429;
                    continue tco;
                };
                if (_429 instanceof Three && _429.value6 instanceof Leaf) {
                    return {
                        key: _429.value4, 
                        value: _429.value5
                    };
                };
                if (_429 instanceof Three) {
                    var __tco___dict_Ord_20 = __dict_Ord_20;
                    var __tco__429 = _429.value6;
                    __dict_Ord_20 = __tco___dict_Ord_20;
                    _429 = __tco__429;
                    continue tco;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var down = function (__copy___dict_Ord_21) {
        return function (__copy_ctx) {
            return function (__copy_k) {
                return function (__copy__426) {
                    var __dict_Ord_21 = __copy___dict_Ord_21;
                    var ctx = __copy_ctx;
                    var k = __copy_k;
                    var _426 = __copy__426;
                    tco: while (true) {
                        if (_426 instanceof Leaf) {
                            return fromZipper(__dict_Ord_21)(ctx)(Leaf.value);
                        };
                        if (_426 instanceof Two && (_426.value0 instanceof Leaf && (_426.value3 instanceof Leaf && Prelude["=="](__dict_Ord_21["__superclass_Prelude.Eq_0"]())(k)(_426.value1)))) {
                            return up(__dict_Ord_21)(ctx)(Leaf.value);
                        };
                        if (_426 instanceof Two) {
                            if (Prelude["=="](__dict_Ord_21["__superclass_Prelude.Eq_0"]())(k)(_426.value1)) {
                                var max = maxNode(__dict_Ord_21)(_426.value0);
                                return removeMaxNode(__dict_Ord_21)(Prelude[":"](new TwoLeft(max.key, max.value, _426.value3))(ctx))(_426.value0);
                            };
                            if (Prelude["<"](__dict_Ord_21)(k)(_426.value1)) {
                                var __tco___dict_Ord_21 = __dict_Ord_21;
                                var __tco_ctx = Prelude[":"](new TwoLeft(_426.value1, _426.value2, _426.value3))(ctx);
                                var __tco_k = k;
                                var __tco__426 = _426.value0;
                                __dict_Ord_21 = __tco___dict_Ord_21;
                                ctx = __tco_ctx;
                                k = __tco_k;
                                _426 = __tco__426;
                                continue tco;
                            };
                            if (Prelude.otherwise) {
                                var __tco___dict_Ord_21 = __dict_Ord_21;
                                var __tco_ctx = Prelude[":"](new TwoRight(_426.value0, _426.value1, _426.value2))(ctx);
                                var __tco_k = k;
                                var __tco__426 = _426.value3;
                                __dict_Ord_21 = __tco___dict_Ord_21;
                                ctx = __tco_ctx;
                                k = __tco_k;
                                _426 = __tco__426;
                                continue tco;
                            };
                        };
                        if (_426 instanceof Three && (_426.value0 instanceof Leaf && (_426.value3 instanceof Leaf && _426.value6 instanceof Leaf))) {
                            if (Prelude["=="](__dict_Ord_21["__superclass_Prelude.Eq_0"]())(k)(_426.value1)) {
                                return fromZipper(__dict_Ord_21)(ctx)(new Two(Leaf.value, _426.value4, _426.value5, Leaf.value));
                            };
                            if (Prelude["=="](__dict_Ord_21["__superclass_Prelude.Eq_0"]())(k)(_426.value4)) {
                                return fromZipper(__dict_Ord_21)(ctx)(new Two(Leaf.value, _426.value1, _426.value2, Leaf.value));
                            };
                        };
                        if (_426 instanceof Three) {
                            if (Prelude["=="](__dict_Ord_21["__superclass_Prelude.Eq_0"]())(k)(_426.value1)) {
                                var max = maxNode(__dict_Ord_21)(_426.value0);
                                return removeMaxNode(__dict_Ord_21)(Prelude[":"](new ThreeLeft(max.key, max.value, _426.value3, _426.value4, _426.value5, _426.value6))(ctx))(_426.value0);
                            };
                            if (Prelude["=="](__dict_Ord_21["__superclass_Prelude.Eq_0"]())(k)(_426.value4)) {
                                var max = maxNode(__dict_Ord_21)(_426.value3);
                                return removeMaxNode(__dict_Ord_21)(Prelude[":"](new ThreeMiddle(_426.value0, _426.value1, _426.value2, max.key, max.value, _426.value6))(ctx))(_426.value3);
                            };
                            if (Prelude["<"](__dict_Ord_21)(k)(_426.value1)) {
                                var __tco___dict_Ord_21 = __dict_Ord_21;
                                var __tco_ctx = Prelude[":"](new ThreeLeft(_426.value1, _426.value2, _426.value3, _426.value4, _426.value5, _426.value6))(ctx);
                                var __tco_k = k;
                                var __tco__426 = _426.value0;
                                __dict_Ord_21 = __tco___dict_Ord_21;
                                ctx = __tco_ctx;
                                k = __tco_k;
                                _426 = __tco__426;
                                continue tco;
                            };
                            if (Prelude["<"](__dict_Ord_21)(_426.value1)(k) && Prelude["<"](__dict_Ord_21)(k)(_426.value4)) {
                                var __tco___dict_Ord_21 = __dict_Ord_21;
                                var __tco_ctx = Prelude[":"](new ThreeMiddle(_426.value0, _426.value1, _426.value2, _426.value4, _426.value5, _426.value6))(ctx);
                                var __tco_k = k;
                                var __tco__426 = _426.value3;
                                __dict_Ord_21 = __tco___dict_Ord_21;
                                ctx = __tco_ctx;
                                k = __tco_k;
                                _426 = __tco__426;
                                continue tco;
                            };
                            if (Prelude.otherwise) {
                                var __tco___dict_Ord_21 = __dict_Ord_21;
                                var __tco_ctx = Prelude[":"](new ThreeRight(_426.value0, _426.value1, _426.value2, _426.value3, _426.value4, _426.value5))(ctx);
                                var __tco_k = k;
                                var __tco__426 = _426.value6;
                                __dict_Ord_21 = __tco___dict_Ord_21;
                                ctx = __tco_ctx;
                                k = __tco_k;
                                _426 = __tco__426;
                                continue tco;
                            };
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        };
    };
    return down(__dict_Ord_17)([  ]);
};
var checkValid = function (tree) {
    var allHeights = function (_422) {
        if (_422 instanceof Leaf) {
            return [ 0 ];
        };
        if (_422 instanceof Two) {
            return Data_Array.map(function (n) {
                return n + 1;
            })(Prelude["++"](Data_Array.semigroupArray)(allHeights(_422.value0))(allHeights(_422.value3)));
        };
        if (_422 instanceof Three) {
            return Data_Array.map(function (n) {
                return n + 1;
            })(Prelude["++"](Data_Array.semigroupArray)(allHeights(_422.value0))(Prelude["++"](Data_Array.semigroupArray)(allHeights(_422.value3))(allHeights(_422.value6))));
        };
        throw new Error("Failed pattern match");
    };
    return Data_Array.length(Data_Array.nub(Prelude.eqNumber)(allHeights(tree))) === 1;
};
var alter = function (__dict_Ord_22) {
    return function (f) {
        return function (k) {
            return function (m) {
                var _2171 = f(lookup(__dict_Ord_22)(k)(m));
                if (_2171 instanceof Data_Maybe.Nothing) {
                    return $$delete(__dict_Ord_22)(k)(m);
                };
                if (_2171 instanceof Data_Maybe.Just) {
                    return insert(__dict_Ord_22)(k)(_2171.value0)(m);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
};
var fromListWith = function (__dict_Ord_23) {
    return function (f) {
        var combine = function (v) {
            return function (_431) {
                if (_431 instanceof Data_Maybe.Just) {
                    return Data_Maybe.Just.create(f(v)(_431.value0));
                };
                if (_431 instanceof Data_Maybe.Nothing) {
                    return new Data_Maybe.Just(v);
                };
                throw new Error("Failed pattern match");
            };
        };
        return Data_Foldable.foldl(Data_Foldable.foldableArray)(function (m) {
            return function (_412) {
                return alter(__dict_Ord_23)(combine(_412.value1))(_412.value0)(m);
            };
        })(empty);
    };
};
var unionWith = function (__dict_Ord_24) {
    return function (f) {
        return function (m1) {
            return function (m2) {
                var go = function (m) {
                    return function (_432) {
                        return alter(__dict_Ord_24)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Data_Maybe.maybe(_432.value1)(f(_432.value1))))(_432.value0)(m);
                    };
                };
                return Data_Foldable.foldl(Data_Foldable.foldableArray)(go)(m2)(toList(m1));
            };
        };
    };
};
var union = function (__dict_Ord_25) {
    return unionWith(__dict_Ord_25)(Prelude["const"]);
};
var semigroupMap = function (__dict_Ord_26) {
    return new Prelude.Semigroup(union(__dict_Ord_26));
};
var monoidMap = function (__dict_Ord_16) {
    return new Data_Monoid.Monoid(function () {
        return semigroupMap(__dict_Ord_16);
    }, empty);
};
var traversableMap = function (__dict_Ord_27) {
    return new Data_Traversable.Traversable(function () {
        return foldableMap;
    }, function () {
        return functorMap;
    }, function (__dict_Applicative_29) {
        return Data_Traversable.traverse(traversableMap(__dict_Ord_27))(__dict_Applicative_29)(Prelude.id(Prelude.categoryArr));
    }, function (__dict_Applicative_28) {
        return function (f) {
            return function (ms) {
                return Data_Foldable.foldr(Data_Foldable.foldableArray)(function (x) {
                    return function (acc) {
                        return Prelude["<*>"](__dict_Applicative_28["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_28["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(union(__dict_Ord_27))(x))(acc);
                    };
                })(Prelude.pure(__dict_Applicative_28)(empty))(Prelude["<$>"](Data_Array.functorArray)(Prelude["<$>"]((__dict_Applicative_28["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.uncurry(singleton)))(Prelude["<$>"](Data_Array.functorArray)(Data_Traversable.traverse(Data_Traversable.traversableTuple)(__dict_Applicative_28)(f))(toList(ms))));
            };
        };
    });
};
var unions = function (__dict_Ord_30) {
    return Data_Foldable.foldl(Data_Foldable.foldableArray)(union(__dict_Ord_30))(empty);
};
var update = function (__dict_Ord_31) {
    return function (f) {
        return function (k) {
            return function (m) {
                return alter(__dict_Ord_31)(Data_Maybe.maybe(Data_Maybe.Nothing.value)(f))(k)(m);
            };
        };
    };
};
module.exports = {
    size: size, 
    map: map, 
    unions: unions, 
    unionWith: unionWith, 
    union: union, 
    values: values, 
    keys: keys, 
    update: update, 
    alter: alter, 
    member: member, 
    "delete": $$delete, 
    fromListWith: fromListWith, 
    fromList: fromList, 
    toList: toList, 
    lookup: lookup, 
    insert: insert, 
    checkValid: checkValid, 
    singleton: singleton, 
    isEmpty: isEmpty, 
    empty: empty, 
    showTree: showTree, 
    eqMap: eqMap, 
    showMap: showMap, 
    ordMap: ordMap, 
    semigroupMap: semigroupMap, 
    monoidMap: monoidMap, 
    functorMap: functorMap, 
    foldableMap: foldableMap, 
    traversableMap: traversableMap
};
