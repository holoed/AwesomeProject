// Generated by psc-make version 0.6.9.5
"use strict";
var Prelude = require("Prelude");
var Data_Foldable = require("Data.Foldable");
var Data_Tuple = require("Data.Tuple");
var Data_Traversable = require("Data.Traversable");
var Data_Array = require("Data.Array");
var Data_Maybe = require("Data.Maybe");
var Data_Monoid = require("Data.Monoid");
var Leaf = (function () {
    function Leaf() {

    };
    Leaf.value = new Leaf();
    return Leaf;
})();
var Two = (function () {
    function Two(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    Two.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new Two(value0, value1, value2, value3);
                };
            };
        };
    };
    return Two;
})();
var Three = (function () {
    function Three(value0, value1, value2, value3, value4, value5, value6) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
        this.value6 = value6;
    };
    Three.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return function (value6) {
                                return new Three(value0, value1, value2, value3, value4, value5, value6);
                            };
                        };
                    };
                };
            };
        };
    };
    return Three;
})();
var TwoLeft = (function () {
    function TwoLeft(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    TwoLeft.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new TwoLeft(value0, value1, value2);
            };
        };
    };
    return TwoLeft;
})();
var TwoRight = (function () {
    function TwoRight(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    TwoRight.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new TwoRight(value0, value1, value2);
            };
        };
    };
    return TwoRight;
})();
var ThreeLeft = (function () {
    function ThreeLeft(value0, value1, value2, value3, value4, value5) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
    };
    ThreeLeft.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return new ThreeLeft(value0, value1, value2, value3, value4, value5);
                        };
                    };
                };
            };
        };
    };
    return ThreeLeft;
})();
var ThreeMiddle = (function () {
    function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
    };
    ThreeMiddle.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
                        };
                    };
                };
            };
        };
    };
    return ThreeMiddle;
})();
var ThreeRight = (function () {
    function ThreeRight(value0, value1, value2, value3, value4, value5) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
    };
    ThreeRight.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return new ThreeRight(value0, value1, value2, value3, value4, value5);
                        };
                    };
                };
            };
        };
    };
    return ThreeRight;
})();
var KickUp = (function () {
    function KickUp(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    KickUp.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new KickUp(value0, value1, value2, value3);
                };
            };
        };
    };
    return KickUp;
})();
var values = function (_431) {
    if (_431 instanceof Leaf) {
        return [  ];
    };
    if (_431 instanceof Two) {
        return Prelude["++"](Data_Array.semigroupArray)(values(_431.value0))(Prelude["++"](Data_Array.semigroupArray)([ _431.value2 ])(values(_431.value3)));
    };
    if (_431 instanceof Three) {
        return Prelude["++"](Data_Array.semigroupArray)(values(_431.value0))(Prelude["++"](Data_Array.semigroupArray)([ _431.value2 ])(Prelude["++"](Data_Array.semigroupArray)(values(_431.value3))(Prelude["++"](Data_Array.semigroupArray)([ _431.value5 ])(values(_431.value6)))));
    };
    throw new Error("Failed pattern match");
};
var toList = function (_429) {
    if (_429 instanceof Leaf) {
        return [  ];
    };
    if (_429 instanceof Two) {
        return Prelude["++"](Data_Array.semigroupArray)(toList(_429.value0))(Prelude["++"](Data_Array.semigroupArray)([ new Data_Tuple.Tuple(_429.value1, _429.value2) ])(toList(_429.value3)));
    };
    if (_429 instanceof Three) {
        return Prelude["++"](Data_Array.semigroupArray)(toList(_429.value0))(Prelude["++"](Data_Array.semigroupArray)([ new Data_Tuple.Tuple(_429.value1, _429.value2) ])(Prelude["++"](Data_Array.semigroupArray)(toList(_429.value3))(Prelude["++"](Data_Array.semigroupArray)([ new Data_Tuple.Tuple(_429.value4, _429.value5) ])(toList(_429.value6)))));
    };
    throw new Error("Failed pattern match");
};
var size = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Array.length)(values);
var singleton = function (k) {
    return function (v) {
        return new Two(Leaf.value, k, v, Leaf.value);
    };
};
var showTree = function (__dict_Show_0) {
    return function (__dict_Show_1) {
        return function (_424) {
            if (_424 instanceof Leaf) {
                return "Leaf";
            };
            if (_424 instanceof Two) {
                return "Two (" + (showTree(__dict_Show_0)(__dict_Show_1)(_424.value0) + (") (" + (Prelude.show(__dict_Show_0)(_424.value1) + (") (" + (Prelude.show(__dict_Show_1)(_424.value2) + (") (" + (showTree(__dict_Show_0)(__dict_Show_1)(_424.value3) + ")")))))));
            };
            if (_424 instanceof Three) {
                return "Three (" + (showTree(__dict_Show_0)(__dict_Show_1)(_424.value0) + (") (" + (Prelude.show(__dict_Show_0)(_424.value1) + (") (" + (Prelude.show(__dict_Show_1)(_424.value2) + (") (" + (showTree(__dict_Show_0)(__dict_Show_1)(_424.value3) + (") (" + (Prelude.show(__dict_Show_0)(_424.value4) + (") (" + (Prelude.show(__dict_Show_1)(_424.value5) + (") (" + (showTree(__dict_Show_0)(__dict_Show_1)(_424.value6) + ")")))))))))))));
            };
            throw new Error("Failed pattern match");
        };
    };
};
var showMap = function (__dict_Show_2) {
    return function (__dict_Show_3) {
        return new Prelude.Show(function (m) {
            return "fromList " + Prelude.show(Prelude.showArray(Data_Tuple.showTuple(__dict_Show_2)(__dict_Show_3)))(toList(m));
        });
    };
};
var lookup = function (__copy___dict_Ord_6) {
    return function (__copy_k) {
        return function (__copy__426) {
            var __dict_Ord_6 = __copy___dict_Ord_6;
            var k = __copy_k;
            var _426 = __copy__426;
            tco: while (true) {
                if (_426 instanceof Leaf) {
                    return Data_Maybe.Nothing.value;
                };
                if (_426 instanceof Two && Prelude["=="](__dict_Ord_6["__superclass_Prelude.Eq_0"]())(k)(_426.value1)) {
                    return new Data_Maybe.Just(_426.value2);
                };
                if (_426 instanceof Two && Prelude["<"](__dict_Ord_6)(k)(_426.value1)) {
                    var __tco___dict_Ord_6 = __dict_Ord_6;
                    var __tco_k = k;
                    var __tco__426 = _426.value0;
                    __dict_Ord_6 = __tco___dict_Ord_6;
                    k = __tco_k;
                    _426 = __tco__426;
                    continue tco;
                };
                if (_426 instanceof Two) {
                    var __tco___dict_Ord_6 = __dict_Ord_6;
                    var __tco_k = k;
                    var __tco__426 = _426.value3;
                    __dict_Ord_6 = __tco___dict_Ord_6;
                    k = __tco_k;
                    _426 = __tco__426;
                    continue tco;
                };
                if (_426 instanceof Three && Prelude["=="](__dict_Ord_6["__superclass_Prelude.Eq_0"]())(k)(_426.value1)) {
                    return new Data_Maybe.Just(_426.value2);
                };
                if (_426 instanceof Three && Prelude["=="](__dict_Ord_6["__superclass_Prelude.Eq_0"]())(k)(_426.value4)) {
                    return new Data_Maybe.Just(_426.value5);
                };
                if (_426 instanceof Three && Prelude["<"](__dict_Ord_6)(k)(_426.value1)) {
                    var __tco___dict_Ord_6 = __dict_Ord_6;
                    var __tco_k = k;
                    var __tco__426 = _426.value0;
                    __dict_Ord_6 = __tco___dict_Ord_6;
                    k = __tco_k;
                    _426 = __tco__426;
                    continue tco;
                };
                if (_426 instanceof Three && (Prelude["<"](__dict_Ord_6)(_426.value1)(k) && Prelude["<="](__dict_Ord_6)(k)(_426.value4))) {
                    var __tco___dict_Ord_6 = __dict_Ord_6;
                    var __tco_k = k;
                    var __tco__426 = _426.value3;
                    __dict_Ord_6 = __tco___dict_Ord_6;
                    k = __tco_k;
                    _426 = __tco__426;
                    continue tco;
                };
                if (_426 instanceof Three) {
                    var __tco___dict_Ord_6 = __dict_Ord_6;
                    var __tco_k = k;
                    var __tco__426 = _426.value6;
                    __dict_Ord_6 = __tco___dict_Ord_6;
                    k = __tco_k;
                    _426 = __tco__426;
                    continue tco;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
};
var member = function (__dict_Ord_7) {
    return function (k) {
        return function (m) {
            return Data_Maybe.isJust(lookup(__dict_Ord_7)(k)(m));
        };
    };
};
var keys = function (_430) {
    if (_430 instanceof Leaf) {
        return [  ];
    };
    if (_430 instanceof Two) {
        return Prelude["++"](Data_Array.semigroupArray)(keys(_430.value0))(Prelude["++"](Data_Array.semigroupArray)([ _430.value1 ])(keys(_430.value3)));
    };
    if (_430 instanceof Three) {
        return Prelude["++"](Data_Array.semigroupArray)(keys(_430.value0))(Prelude["++"](Data_Array.semigroupArray)([ _430.value1 ])(Prelude["++"](Data_Array.semigroupArray)(keys(_430.value3))(Prelude["++"](Data_Array.semigroupArray)([ _430.value4 ])(keys(_430.value6)))));
    };
    throw new Error("Failed pattern match");
};
var isEmpty = function (_425) {
    if (_425 instanceof Leaf) {
        return true;
    };
    return false;
};
var functorMap = new Prelude.Functor(function (f) {
    return function (_432) {
        if (_432 instanceof Leaf) {
            return Leaf.value;
        };
        if (_432 instanceof Two) {
            return new Two(Prelude["<$>"](functorMap)(f)(_432.value0), _432.value1, f(_432.value2), Prelude["<$>"](functorMap)(f)(_432.value3));
        };
        if (_432 instanceof Three) {
            return new Three(Prelude["<$>"](functorMap)(f)(_432.value0), _432.value1, f(_432.value2), Prelude["<$>"](functorMap)(f)(_432.value3), _432.value4, f(_432.value5), Prelude["<$>"](functorMap)(f)(_432.value6));
        };
        throw new Error("Failed pattern match");
    };
});
var map = Prelude["<$>"](functorMap);
var fromZipper = function (__copy___dict_Ord_8) {
    return function (__copy__427) {
        return function (__copy__428) {
            var __dict_Ord_8 = __copy___dict_Ord_8;
            var _427 = __copy__427;
            var _428 = __copy__428;
            tco: while (true) {
                if (_427.length === 0) {
                    return _428;
                };
                if (_427.length >= 1) {
                    var _1795 = _427.slice(1);
                    if (_427[0] instanceof TwoLeft) {
                        var __tco___dict_Ord_8 = __dict_Ord_8;
                        var __tco__428 = new Two(_428, (_427[0]).value0, (_427[0]).value1, (_427[0]).value2);
                        __dict_Ord_8 = __tco___dict_Ord_8;
                        _427 = _1795;
                        _428 = __tco__428;
                        continue tco;
                    };
                };
                if (_427.length >= 1) {
                    var _1800 = _427.slice(1);
                    if (_427[0] instanceof TwoRight) {
                        var __tco___dict_Ord_8 = __dict_Ord_8;
                        var __tco__428 = new Two((_427[0]).value0, (_427[0]).value1, (_427[0]).value2, _428);
                        __dict_Ord_8 = __tco___dict_Ord_8;
                        _427 = _1800;
                        _428 = __tco__428;
                        continue tco;
                    };
                };
                if (_427.length >= 1) {
                    var _1808 = _427.slice(1);
                    if (_427[0] instanceof ThreeLeft) {
                        var __tco___dict_Ord_8 = __dict_Ord_8;
                        var __tco__428 = new Three(_428, (_427[0]).value0, (_427[0]).value1, (_427[0]).value2, (_427[0]).value3, (_427[0]).value4, (_427[0]).value5);
                        __dict_Ord_8 = __tco___dict_Ord_8;
                        _427 = _1808;
                        _428 = __tco__428;
                        continue tco;
                    };
                };
                if (_427.length >= 1) {
                    var _1816 = _427.slice(1);
                    if (_427[0] instanceof ThreeMiddle) {
                        var __tco___dict_Ord_8 = __dict_Ord_8;
                        var __tco__428 = new Three((_427[0]).value0, (_427[0]).value1, (_427[0]).value2, _428, (_427[0]).value3, (_427[0]).value4, (_427[0]).value5);
                        __dict_Ord_8 = __tco___dict_Ord_8;
                        _427 = _1816;
                        _428 = __tco__428;
                        continue tco;
                    };
                };
                if (_427.length >= 1) {
                    var _1824 = _427.slice(1);
                    if (_427[0] instanceof ThreeRight) {
                        var __tco___dict_Ord_8 = __dict_Ord_8;
                        var __tco__428 = new Three((_427[0]).value0, (_427[0]).value1, (_427[0]).value2, (_427[0]).value3, (_427[0]).value4, (_427[0]).value5, _428);
                        __dict_Ord_8 = __tco___dict_Ord_8;
                        _427 = _1824;
                        _428 = __tco__428;
                        continue tco;
                    };
                };
                throw new Error("Failed pattern match");
            };
        };
    };
};
var insert = function (__dict_Ord_9) {
    var up = function (__copy___dict_Ord_10) {
        return function (__copy__435) {
            return function (__copy__436) {
                var __dict_Ord_10 = __copy___dict_Ord_10;
                var _435 = __copy__435;
                var _436 = __copy__436;
                tco: while (true) {
                    if (_435.length === 0) {
                        return new Two(_436.value0, _436.value1, _436.value2, _436.value3);
                    };
                    if (_435.length >= 1) {
                        var _1839 = _435.slice(1);
                        if (_435[0] instanceof TwoLeft) {
                            return fromZipper(__dict_Ord_10)(_1839)(new Three(_436.value0, _436.value1, _436.value2, _436.value3, (_435[0]).value0, (_435[0]).value1, (_435[0]).value2));
                        };
                    };
                    if (_435.length >= 1) {
                        var _1848 = _435.slice(1);
                        if (_435[0] instanceof TwoRight) {
                            return fromZipper(__dict_Ord_10)(_1848)(new Three((_435[0]).value0, (_435[0]).value1, (_435[0]).value2, _436.value0, _436.value1, _436.value2, _436.value3));
                        };
                    };
                    if (_435.length >= 1) {
                        var _1860 = _435.slice(1);
                        if (_435[0] instanceof ThreeLeft) {
                            var __tco___dict_Ord_10 = __dict_Ord_10;
                            var __tco__436 = new KickUp(new Two(_436.value0, _436.value1, _436.value2, _436.value3), (_435[0]).value0, (_435[0]).value1, new Two((_435[0]).value2, (_435[0]).value3, (_435[0]).value4, (_435[0]).value5));
                            __dict_Ord_10 = __tco___dict_Ord_10;
                            _435 = _1860;
                            _436 = __tco__436;
                            continue tco;
                        };
                    };
                    if (_435.length >= 1) {
                        var _1872 = _435.slice(1);
                        if (_435[0] instanceof ThreeMiddle) {
                            var __tco___dict_Ord_10 = __dict_Ord_10;
                            var __tco__436 = new KickUp(new Two((_435[0]).value0, (_435[0]).value1, (_435[0]).value2, _436.value0), _436.value1, _436.value2, new Two(_436.value3, (_435[0]).value3, (_435[0]).value4, (_435[0]).value5));
                            __dict_Ord_10 = __tco___dict_Ord_10;
                            _435 = _1872;
                            _436 = __tco__436;
                            continue tco;
                        };
                    };
                    if (_435.length >= 1) {
                        var _1884 = _435.slice(1);
                        if (_435[0] instanceof ThreeRight) {
                            var __tco___dict_Ord_10 = __dict_Ord_10;
                            var __tco__436 = new KickUp(new Two((_435[0]).value0, (_435[0]).value1, (_435[0]).value2, (_435[0]).value3), (_435[0]).value4, (_435[0]).value5, new Two(_436.value0, _436.value1, _436.value2, _436.value3));
                            __dict_Ord_10 = __tco___dict_Ord_10;
                            _435 = _1884;
                            _436 = __tco__436;
                            continue tco;
                        };
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var down = function (__copy___dict_Ord_11) {
        return function (__copy_ctx) {
            return function (__copy_k) {
                return function (__copy_v) {
                    return function (__copy__434) {
                        var __dict_Ord_11 = __copy___dict_Ord_11;
                        var ctx = __copy_ctx;
                        var k = __copy_k;
                        var v = __copy_v;
                        var _434 = __copy__434;
                        tco: while (true) {
                            if (_434 instanceof Leaf) {
                                return up(__dict_Ord_11)(ctx)(new KickUp(Leaf.value, k, v, Leaf.value));
                            };
                            if (_434 instanceof Two && Prelude["=="](__dict_Ord_11["__superclass_Prelude.Eq_0"]())(k)(_434.value1)) {
                                return fromZipper(__dict_Ord_11)(ctx)(new Two(_434.value0, k, v, _434.value3));
                            };
                            if (_434 instanceof Two && Prelude["<"](__dict_Ord_11)(k)(_434.value1)) {
                                var __tco___dict_Ord_11 = __dict_Ord_11;
                                var __tco_ctx = Prelude[":"](new TwoLeft(_434.value1, _434.value2, _434.value3))(ctx);
                                var __tco_k = k;
                                var __tco_v = v;
                                var __tco__434 = _434.value0;
                                __dict_Ord_11 = __tco___dict_Ord_11;
                                ctx = __tco_ctx;
                                k = __tco_k;
                                v = __tco_v;
                                _434 = __tco__434;
                                continue tco;
                            };
                            if (_434 instanceof Two) {
                                var __tco___dict_Ord_11 = __dict_Ord_11;
                                var __tco_ctx = Prelude[":"](new TwoRight(_434.value0, _434.value1, _434.value2))(ctx);
                                var __tco_k = k;
                                var __tco_v = v;
                                var __tco__434 = _434.value3;
                                __dict_Ord_11 = __tco___dict_Ord_11;
                                ctx = __tco_ctx;
                                k = __tco_k;
                                v = __tco_v;
                                _434 = __tco__434;
                                continue tco;
                            };
                            if (_434 instanceof Three && Prelude["=="](__dict_Ord_11["__superclass_Prelude.Eq_0"]())(k)(_434.value1)) {
                                return fromZipper(__dict_Ord_11)(ctx)(new Three(_434.value0, k, v, _434.value3, _434.value4, _434.value5, _434.value6));
                            };
                            if (_434 instanceof Three && Prelude["=="](__dict_Ord_11["__superclass_Prelude.Eq_0"]())(k)(_434.value4)) {
                                return fromZipper(__dict_Ord_11)(ctx)(new Three(_434.value0, _434.value1, _434.value2, _434.value3, k, v, _434.value6));
                            };
                            if (_434 instanceof Three && Prelude["<"](__dict_Ord_11)(k)(_434.value1)) {
                                var __tco___dict_Ord_11 = __dict_Ord_11;
                                var __tco_ctx = Prelude[":"](new ThreeLeft(_434.value1, _434.value2, _434.value3, _434.value4, _434.value5, _434.value6))(ctx);
                                var __tco_k = k;
                                var __tco_v = v;
                                var __tco__434 = _434.value0;
                                __dict_Ord_11 = __tco___dict_Ord_11;
                                ctx = __tco_ctx;
                                k = __tco_k;
                                v = __tco_v;
                                _434 = __tco__434;
                                continue tco;
                            };
                            if (_434 instanceof Three && (Prelude["<"](__dict_Ord_11)(_434.value1)(k) && Prelude["<="](__dict_Ord_11)(k)(_434.value4))) {
                                var __tco___dict_Ord_11 = __dict_Ord_11;
                                var __tco_ctx = Prelude[":"](new ThreeMiddle(_434.value0, _434.value1, _434.value2, _434.value4, _434.value5, _434.value6))(ctx);
                                var __tco_k = k;
                                var __tco_v = v;
                                var __tco__434 = _434.value3;
                                __dict_Ord_11 = __tco___dict_Ord_11;
                                ctx = __tco_ctx;
                                k = __tco_k;
                                v = __tco_v;
                                _434 = __tco__434;
                                continue tco;
                            };
                            if (_434 instanceof Three) {
                                var __tco___dict_Ord_11 = __dict_Ord_11;
                                var __tco_ctx = Prelude[":"](new ThreeRight(_434.value0, _434.value1, _434.value2, _434.value3, _434.value4, _434.value5))(ctx);
                                var __tco_k = k;
                                var __tco_v = v;
                                var __tco__434 = _434.value6;
                                __dict_Ord_11 = __tco___dict_Ord_11;
                                ctx = __tco_ctx;
                                k = __tco_k;
                                v = __tco_v;
                                _434 = __tco__434;
                                continue tco;
                            };
                            throw new Error("Failed pattern match");
                        };
                    };
                };
            };
        };
    };
    return down(__dict_Ord_9)([  ]);
};
var foldableMap = new Data_Foldable.Foldable(function (__dict_Monoid_12) {
    return function (f) {
        return function (m) {
            return Data_Foldable.foldMap(Data_Foldable.foldableArray)(__dict_Monoid_12)(f)(values(m));
        };
    };
}, function (f) {
    return function (z) {
        return function (m) {
            return Data_Foldable.foldl(Data_Foldable.foldableArray)(f)(z)(values(m));
        };
    };
}, function (f) {
    return function (z) {
        return function (m) {
            return Data_Foldable.foldr(Data_Foldable.foldableArray)(f)(z)(values(m));
        };
    };
});
var eqMap = function (__dict_Eq_13) {
    return function (__dict_Eq_14) {
        return new Prelude.Eq(function (m1) {
            return function (m2) {
                return !Prelude["=="](eqMap(__dict_Eq_13)(__dict_Eq_14))(m1)(m2);
            };
        }, function (m1) {
            return function (m2) {
                return Prelude["=="](Prelude.eqArray(Data_Tuple.eqTuple(__dict_Eq_13)(__dict_Eq_14)))(toList(m1))(toList(m2));
            };
        });
    };
};
var ordMap = function (__dict_Ord_4) {
    return function (__dict_Ord_5) {
        return new Prelude.Ord(function () {
            return eqMap(__dict_Ord_4["__superclass_Prelude.Eq_0"]())(__dict_Ord_5["__superclass_Prelude.Eq_0"]());
        }, function (m1) {
            return function (m2) {
                return Prelude.compare(Prelude.ordArray(Data_Tuple.ordTuple(__dict_Ord_4)(__dict_Ord_5)))(toList(m1))(toList(m2));
            };
        });
    };
};
var empty = Leaf.value;
var fromList = function (__dict_Ord_15) {
    return Data_Foldable.foldl(Data_Foldable.foldableArray)(function (m) {
        return function (_422) {
            return insert(__dict_Ord_15)(_422.value0)(_422.value1)(m);
        };
    })(empty);
};
var $$delete = function (__dict_Ord_17) {
    var up = function (__copy___dict_Ord_18) {
        return function (__copy__438) {
            return function (__copy__439) {
                var __dict_Ord_18 = __copy___dict_Ord_18;
                var _438 = __copy__438;
                var _439 = __copy__439;
                tco: while (true) {
                    if (_438.length === 0) {
                        return _439;
                    };
                    if (_438.length >= 1) {
                        var _1945 = _438.slice(1);
                        if (_438[0] instanceof TwoLeft && ((_438[0]).value2 instanceof Leaf && _439 instanceof Leaf)) {
                            return fromZipper(__dict_Ord_18)(_1945)(new Two(Leaf.value, (_438[0]).value0, (_438[0]).value1, Leaf.value));
                        };
                    };
                    if (_438.length >= 1) {
                        var _1950 = _438.slice(1);
                        if (_438[0] instanceof TwoRight && ((_438[0]).value0 instanceof Leaf && _439 instanceof Leaf)) {
                            return fromZipper(__dict_Ord_18)(_1950)(new Two(Leaf.value, (_438[0]).value1, (_438[0]).value2, Leaf.value));
                        };
                    };
                    if (_438.length >= 1) {
                        var _1959 = _438.slice(1);
                        if (_438[0] instanceof TwoLeft && (_438[0]).value2 instanceof Two) {
                            var __tco___dict_Ord_18 = __dict_Ord_18;
                            var __tco__439 = new Three(_439, (_438[0]).value0, (_438[0]).value1, (_438[0]).value2.value0, (_438[0]).value2.value1, (_438[0]).value2.value2, (_438[0]).value2.value3);
                            __dict_Ord_18 = __tco___dict_Ord_18;
                            _438 = _1959;
                            _439 = __tco__439;
                            continue tco;
                        };
                    };
                    if (_438.length >= 1) {
                        var _1968 = _438.slice(1);
                        if (_438[0] instanceof TwoRight && (_438[0]).value0 instanceof Two) {
                            var __tco___dict_Ord_18 = __dict_Ord_18;
                            var __tco__439 = new Three((_438[0]).value0.value0, (_438[0]).value0.value1, (_438[0]).value0.value2, (_438[0]).value0.value3, (_438[0]).value1, (_438[0]).value2, _439);
                            __dict_Ord_18 = __tco___dict_Ord_18;
                            _438 = _1968;
                            _439 = __tco__439;
                            continue tco;
                        };
                    };
                    if (_438.length >= 1) {
                        var _1980 = _438.slice(1);
                        if (_438[0] instanceof TwoLeft && (_438[0]).value2 instanceof Three) {
                            return fromZipper(__dict_Ord_18)(_1980)(new Two(new Two(_439, (_438[0]).value0, (_438[0]).value1, (_438[0]).value2.value0), (_438[0]).value2.value1, (_438[0]).value2.value2, new Two((_438[0]).value2.value3, (_438[0]).value2.value4, (_438[0]).value2.value5, (_438[0]).value2.value6)));
                        };
                    };
                    if (_438.length >= 1) {
                        var _1992 = _438.slice(1);
                        if (_438[0] instanceof TwoRight && (_438[0]).value0 instanceof Three) {
                            return fromZipper(__dict_Ord_18)(_1992)(new Two(new Two((_438[0]).value0.value0, (_438[0]).value0.value1, (_438[0]).value0.value2, (_438[0]).value0.value3), (_438[0]).value0.value4, (_438[0]).value0.value5, new Two((_438[0]).value0.value6, (_438[0]).value1, (_438[0]).value2, _439)));
                        };
                    };
                    if (_438.length >= 1) {
                        var _2000 = _438.slice(1);
                        if (_438[0] instanceof ThreeLeft && ((_438[0]).value2 instanceof Leaf && ((_438[0]).value5 instanceof Leaf && _439 instanceof Leaf))) {
                            return fromZipper(__dict_Ord_18)(_2000)(new Three(Leaf.value, (_438[0]).value0, (_438[0]).value1, Leaf.value, (_438[0]).value3, (_438[0]).value4, Leaf.value));
                        };
                    };
                    if (_438.length >= 1) {
                        var _2008 = _438.slice(1);
                        if (_438[0] instanceof ThreeMiddle && ((_438[0]).value0 instanceof Leaf && ((_438[0]).value5 instanceof Leaf && _439 instanceof Leaf))) {
                            return fromZipper(__dict_Ord_18)(_2008)(new Three(Leaf.value, (_438[0]).value1, (_438[0]).value2, Leaf.value, (_438[0]).value3, (_438[0]).value4, Leaf.value));
                        };
                    };
                    if (_438.length >= 1) {
                        var _2016 = _438.slice(1);
                        if (_438[0] instanceof ThreeRight && ((_438[0]).value0 instanceof Leaf && ((_438[0]).value3 instanceof Leaf && _439 instanceof Leaf))) {
                            return fromZipper(__dict_Ord_18)(_2016)(new Three(Leaf.value, (_438[0]).value1, (_438[0]).value2, Leaf.value, (_438[0]).value4, (_438[0]).value5, Leaf.value));
                        };
                    };
                    if (_438.length >= 1) {
                        var _2028 = _438.slice(1);
                        if (_438[0] instanceof ThreeLeft && (_438[0]).value2 instanceof Two) {
                            return fromZipper(__dict_Ord_18)(_2028)(new Two(new Three(_439, (_438[0]).value0, (_438[0]).value1, (_438[0]).value2.value0, (_438[0]).value2.value1, (_438[0]).value2.value2, (_438[0]).value2.value3), (_438[0]).value3, (_438[0]).value4, (_438[0]).value5));
                        };
                    };
                    if (_438.length >= 1) {
                        var _2040 = _438.slice(1);
                        if (_438[0] instanceof ThreeMiddle && (_438[0]).value0 instanceof Two) {
                            return fromZipper(__dict_Ord_18)(_2040)(new Two(new Three((_438[0]).value0.value0, (_438[0]).value0.value1, (_438[0]).value0.value2, (_438[0]).value0.value3, (_438[0]).value1, (_438[0]).value2, _439), (_438[0]).value3, (_438[0]).value4, (_438[0]).value5));
                        };
                    };
                    if (_438.length >= 1) {
                        var _2052 = _438.slice(1);
                        if (_438[0] instanceof ThreeMiddle && (_438[0]).value5 instanceof Two) {
                            return fromZipper(__dict_Ord_18)(_2052)(new Two((_438[0]).value0, (_438[0]).value1, (_438[0]).value2, new Three(_439, (_438[0]).value3, (_438[0]).value4, (_438[0]).value5.value0, (_438[0]).value5.value1, (_438[0]).value5.value2, (_438[0]).value5.value3)));
                        };
                    };
                    if (_438.length >= 1) {
                        var _2064 = _438.slice(1);
                        if (_438[0] instanceof ThreeRight && (_438[0]).value3 instanceof Two) {
                            return fromZipper(__dict_Ord_18)(_2064)(new Two((_438[0]).value0, (_438[0]).value1, (_438[0]).value2, new Three((_438[0]).value3.value0, (_438[0]).value3.value1, (_438[0]).value3.value2, (_438[0]).value3.value3, (_438[0]).value4, (_438[0]).value5, _439)));
                        };
                    };
                    if (_438.length >= 1) {
                        var _2079 = _438.slice(1);
                        if (_438[0] instanceof ThreeLeft && (_438[0]).value2 instanceof Three) {
                            return fromZipper(__dict_Ord_18)(_2079)(new Three(new Two(_439, (_438[0]).value0, (_438[0]).value1, (_438[0]).value2.value0), (_438[0]).value2.value1, (_438[0]).value2.value2, new Two((_438[0]).value2.value3, (_438[0]).value2.value4, (_438[0]).value2.value5, (_438[0]).value2.value6), (_438[0]).value3, (_438[0]).value4, (_438[0]).value5));
                        };
                    };
                    if (_438.length >= 1) {
                        var _2094 = _438.slice(1);
                        if (_438[0] instanceof ThreeMiddle && (_438[0]).value0 instanceof Three) {
                            return fromZipper(__dict_Ord_18)(_2094)(new Three(new Two((_438[0]).value0.value0, (_438[0]).value0.value1, (_438[0]).value0.value2, (_438[0]).value0.value3), (_438[0]).value0.value4, (_438[0]).value0.value5, new Two((_438[0]).value0.value6, (_438[0]).value1, (_438[0]).value2, _439), (_438[0]).value3, (_438[0]).value4, (_438[0]).value5));
                        };
                    };
                    if (_438.length >= 1) {
                        var _2109 = _438.slice(1);
                        if (_438[0] instanceof ThreeMiddle && (_438[0]).value5 instanceof Three) {
                            return fromZipper(__dict_Ord_18)(_2109)(new Three((_438[0]).value0, (_438[0]).value1, (_438[0]).value2, new Two(_439, (_438[0]).value3, (_438[0]).value4, (_438[0]).value5.value0), (_438[0]).value5.value1, (_438[0]).value5.value2, new Two((_438[0]).value5.value3, (_438[0]).value5.value4, (_438[0]).value5.value5, (_438[0]).value5.value6)));
                        };
                    };
                    if (_438.length >= 1) {
                        var _2124 = _438.slice(1);
                        if (_438[0] instanceof ThreeRight && (_438[0]).value3 instanceof Three) {
                            return fromZipper(__dict_Ord_18)(_2124)(new Three((_438[0]).value0, (_438[0]).value1, (_438[0]).value2, new Two((_438[0]).value3.value0, (_438[0]).value3.value1, (_438[0]).value3.value2, (_438[0]).value3.value3), (_438[0]).value3.value4, (_438[0]).value3.value5, new Two((_438[0]).value3.value6, (_438[0]).value4, (_438[0]).value5, _439)));
                        };
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var removeMaxNode = function (__copy___dict_Ord_19) {
        return function (__copy_ctx) {
            return function (__copy__441) {
                var __dict_Ord_19 = __copy___dict_Ord_19;
                var ctx = __copy_ctx;
                var _441 = __copy__441;
                tco: while (true) {
                    if (_441 instanceof Two && (_441.value0 instanceof Leaf && _441.value3 instanceof Leaf)) {
                        return up(__dict_Ord_19)(ctx)(Leaf.value);
                    };
                    if (_441 instanceof Two) {
                        var __tco___dict_Ord_19 = __dict_Ord_19;
                        var __tco_ctx = Prelude[":"](new TwoRight(_441.value0, _441.value1, _441.value2))(ctx);
                        var __tco__441 = _441.value3;
                        __dict_Ord_19 = __tco___dict_Ord_19;
                        ctx = __tco_ctx;
                        _441 = __tco__441;
                        continue tco;
                    };
                    if (_441 instanceof Three && (_441.value0 instanceof Leaf && (_441.value3 instanceof Leaf && _441.value6 instanceof Leaf))) {
                        return up(__dict_Ord_19)(Prelude[":"](new TwoRight(Leaf.value, _441.value1, _441.value2))(ctx))(Leaf.value);
                    };
                    if (_441 instanceof Three) {
                        var __tco___dict_Ord_19 = __dict_Ord_19;
                        var __tco_ctx = Prelude[":"](new ThreeRight(_441.value0, _441.value1, _441.value2, _441.value3, _441.value4, _441.value5))(ctx);
                        var __tco__441 = _441.value6;
                        __dict_Ord_19 = __tco___dict_Ord_19;
                        ctx = __tco_ctx;
                        _441 = __tco__441;
                        continue tco;
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var maxNode = function (__copy___dict_Ord_20) {
        return function (__copy__440) {
            var __dict_Ord_20 = __copy___dict_Ord_20;
            var _440 = __copy__440;
            tco: while (true) {
                if (_440 instanceof Two && _440.value3 instanceof Leaf) {
                    return {
                        key: _440.value1, 
                        value: _440.value2
                    };
                };
                if (_440 instanceof Two) {
                    var __tco___dict_Ord_20 = __dict_Ord_20;
                    var __tco__440 = _440.value3;
                    __dict_Ord_20 = __tco___dict_Ord_20;
                    _440 = __tco__440;
                    continue tco;
                };
                if (_440 instanceof Three && _440.value6 instanceof Leaf) {
                    return {
                        key: _440.value4, 
                        value: _440.value5
                    };
                };
                if (_440 instanceof Three) {
                    var __tco___dict_Ord_20 = __dict_Ord_20;
                    var __tco__440 = _440.value6;
                    __dict_Ord_20 = __tco___dict_Ord_20;
                    _440 = __tco__440;
                    continue tco;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var down = function (__copy___dict_Ord_21) {
        return function (__copy_ctx) {
            return function (__copy_k) {
                return function (__copy__437) {
                    var __dict_Ord_21 = __copy___dict_Ord_21;
                    var ctx = __copy_ctx;
                    var k = __copy_k;
                    var _437 = __copy__437;
                    tco: while (true) {
                        if (_437 instanceof Leaf) {
                            return fromZipper(__dict_Ord_21)(ctx)(Leaf.value);
                        };
                        if (_437 instanceof Two && (_437.value0 instanceof Leaf && (_437.value3 instanceof Leaf && Prelude["=="](__dict_Ord_21["__superclass_Prelude.Eq_0"]())(k)(_437.value1)))) {
                            return up(__dict_Ord_21)(ctx)(Leaf.value);
                        };
                        if (_437 instanceof Two) {
                            if (Prelude["=="](__dict_Ord_21["__superclass_Prelude.Eq_0"]())(k)(_437.value1)) {
                                var max = maxNode(__dict_Ord_21)(_437.value0);
                                return removeMaxNode(__dict_Ord_21)(Prelude[":"](new TwoLeft(max.key, max.value, _437.value3))(ctx))(_437.value0);
                            };
                            if (Prelude["<"](__dict_Ord_21)(k)(_437.value1)) {
                                var __tco___dict_Ord_21 = __dict_Ord_21;
                                var __tco_ctx = Prelude[":"](new TwoLeft(_437.value1, _437.value2, _437.value3))(ctx);
                                var __tco_k = k;
                                var __tco__437 = _437.value0;
                                __dict_Ord_21 = __tco___dict_Ord_21;
                                ctx = __tco_ctx;
                                k = __tco_k;
                                _437 = __tco__437;
                                continue tco;
                            };
                            if (Prelude.otherwise) {
                                var __tco___dict_Ord_21 = __dict_Ord_21;
                                var __tco_ctx = Prelude[":"](new TwoRight(_437.value0, _437.value1, _437.value2))(ctx);
                                var __tco_k = k;
                                var __tco__437 = _437.value3;
                                __dict_Ord_21 = __tco___dict_Ord_21;
                                ctx = __tco_ctx;
                                k = __tco_k;
                                _437 = __tco__437;
                                continue tco;
                            };
                        };
                        if (_437 instanceof Three && (_437.value0 instanceof Leaf && (_437.value3 instanceof Leaf && _437.value6 instanceof Leaf))) {
                            if (Prelude["=="](__dict_Ord_21["__superclass_Prelude.Eq_0"]())(k)(_437.value1)) {
                                return fromZipper(__dict_Ord_21)(ctx)(new Two(Leaf.value, _437.value4, _437.value5, Leaf.value));
                            };
                            if (Prelude["=="](__dict_Ord_21["__superclass_Prelude.Eq_0"]())(k)(_437.value4)) {
                                return fromZipper(__dict_Ord_21)(ctx)(new Two(Leaf.value, _437.value1, _437.value2, Leaf.value));
                            };
                        };
                        if (_437 instanceof Three) {
                            if (Prelude["=="](__dict_Ord_21["__superclass_Prelude.Eq_0"]())(k)(_437.value1)) {
                                var max = maxNode(__dict_Ord_21)(_437.value0);
                                return removeMaxNode(__dict_Ord_21)(Prelude[":"](new ThreeLeft(max.key, max.value, _437.value3, _437.value4, _437.value5, _437.value6))(ctx))(_437.value0);
                            };
                            if (Prelude["=="](__dict_Ord_21["__superclass_Prelude.Eq_0"]())(k)(_437.value4)) {
                                var max = maxNode(__dict_Ord_21)(_437.value3);
                                return removeMaxNode(__dict_Ord_21)(Prelude[":"](new ThreeMiddle(_437.value0, _437.value1, _437.value2, max.key, max.value, _437.value6))(ctx))(_437.value3);
                            };
                            if (Prelude["<"](__dict_Ord_21)(k)(_437.value1)) {
                                var __tco___dict_Ord_21 = __dict_Ord_21;
                                var __tco_ctx = Prelude[":"](new ThreeLeft(_437.value1, _437.value2, _437.value3, _437.value4, _437.value5, _437.value6))(ctx);
                                var __tco_k = k;
                                var __tco__437 = _437.value0;
                                __dict_Ord_21 = __tco___dict_Ord_21;
                                ctx = __tco_ctx;
                                k = __tco_k;
                                _437 = __tco__437;
                                continue tco;
                            };
                            if (Prelude["<"](__dict_Ord_21)(_437.value1)(k) && Prelude["<"](__dict_Ord_21)(k)(_437.value4)) {
                                var __tco___dict_Ord_21 = __dict_Ord_21;
                                var __tco_ctx = Prelude[":"](new ThreeMiddle(_437.value0, _437.value1, _437.value2, _437.value4, _437.value5, _437.value6))(ctx);
                                var __tco_k = k;
                                var __tco__437 = _437.value3;
                                __dict_Ord_21 = __tco___dict_Ord_21;
                                ctx = __tco_ctx;
                                k = __tco_k;
                                _437 = __tco__437;
                                continue tco;
                            };
                            if (Prelude.otherwise) {
                                var __tco___dict_Ord_21 = __dict_Ord_21;
                                var __tco_ctx = Prelude[":"](new ThreeRight(_437.value0, _437.value1, _437.value2, _437.value3, _437.value4, _437.value5))(ctx);
                                var __tco_k = k;
                                var __tco__437 = _437.value6;
                                __dict_Ord_21 = __tco___dict_Ord_21;
                                ctx = __tco_ctx;
                                k = __tco_k;
                                _437 = __tco__437;
                                continue tco;
                            };
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        };
    };
    return down(__dict_Ord_17)([  ]);
};
var checkValid = function (tree) {
    var allHeights = function (_433) {
        if (_433 instanceof Leaf) {
            return [ 0 ];
        };
        if (_433 instanceof Two) {
            return Data_Array.map(function (n) {
                return n + 1;
            })(Prelude["++"](Data_Array.semigroupArray)(allHeights(_433.value0))(allHeights(_433.value3)));
        };
        if (_433 instanceof Three) {
            return Data_Array.map(function (n) {
                return n + 1;
            })(Prelude["++"](Data_Array.semigroupArray)(allHeights(_433.value0))(Prelude["++"](Data_Array.semigroupArray)(allHeights(_433.value3))(allHeights(_433.value6))));
        };
        throw new Error("Failed pattern match");
    };
    return Data_Array.length(Data_Array.nub(Prelude.eqNumber)(allHeights(tree))) === 1;
};
var alter = function (__dict_Ord_22) {
    return function (f) {
        return function (k) {
            return function (m) {
                var _2209 = f(lookup(__dict_Ord_22)(k)(m));
                if (_2209 instanceof Data_Maybe.Nothing) {
                    return $$delete(__dict_Ord_22)(k)(m);
                };
                if (_2209 instanceof Data_Maybe.Just) {
                    return insert(__dict_Ord_22)(k)(_2209.value0)(m);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
};
var fromListWith = function (__dict_Ord_23) {
    return function (f) {
        var combine = function (v) {
            return function (_442) {
                if (_442 instanceof Data_Maybe.Just) {
                    return Data_Maybe.Just.create(f(v)(_442.value0));
                };
                if (_442 instanceof Data_Maybe.Nothing) {
                    return new Data_Maybe.Just(v);
                };
                throw new Error("Failed pattern match");
            };
        };
        return Data_Foldable.foldl(Data_Foldable.foldableArray)(function (m) {
            return function (_423) {
                return alter(__dict_Ord_23)(combine(_423.value1))(_423.value0)(m);
            };
        })(empty);
    };
};
var unionWith = function (__dict_Ord_24) {
    return function (f) {
        return function (m1) {
            return function (m2) {
                var go = function (m) {
                    return function (_443) {
                        return alter(__dict_Ord_24)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Data_Maybe.maybe(_443.value1)(f(_443.value1))))(_443.value0)(m);
                    };
                };
                return Data_Foldable.foldl(Data_Foldable.foldableArray)(go)(m2)(toList(m1));
            };
        };
    };
};
var union = function (__dict_Ord_25) {
    return unionWith(__dict_Ord_25)(Prelude["const"]);
};
var semigroupMap = function (__dict_Ord_26) {
    return new Prelude.Semigroup(union(__dict_Ord_26));
};
var monoidMap = function (__dict_Ord_16) {
    return new Data_Monoid.Monoid(function () {
        return semigroupMap(__dict_Ord_16);
    }, empty);
};
var traversableMap = function (__dict_Ord_27) {
    return new Data_Traversable.Traversable(function () {
        return foldableMap;
    }, function () {
        return functorMap;
    }, function (__dict_Applicative_29) {
        return Data_Traversable.traverse(traversableMap(__dict_Ord_27))(__dict_Applicative_29)(Prelude.id(Prelude.categoryArr));
    }, function (__dict_Applicative_28) {
        return function (f) {
            return function (ms) {
                return Data_Foldable.foldr(Data_Foldable.foldableArray)(function (x) {
                    return function (acc) {
                        return Prelude["<*>"](__dict_Applicative_28["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_28["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(union(__dict_Ord_27))(x))(acc);
                    };
                })(Prelude.pure(__dict_Applicative_28)(empty))(Prelude["<$>"](Data_Array.functorArray)(Prelude["<$>"]((__dict_Applicative_28["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.uncurry(singleton)))(Prelude["<$>"](Data_Array.functorArray)(Data_Traversable.traverse(Data_Traversable.traversableTuple)(__dict_Applicative_28)(f))(toList(ms))));
            };
        };
    });
};
var unions = function (__dict_Ord_30) {
    return Data_Foldable.foldl(Data_Foldable.foldableArray)(union(__dict_Ord_30))(empty);
};
var update = function (__dict_Ord_31) {
    return function (f) {
        return function (k) {
            return function (m) {
                return alter(__dict_Ord_31)(Data_Maybe.maybe(Data_Maybe.Nothing.value)(f))(k)(m);
            };
        };
    };
};
module.exports = {
    size: size, 
    map: map, 
    unions: unions, 
    unionWith: unionWith, 
    union: union, 
    values: values, 
    keys: keys, 
    update: update, 
    alter: alter, 
    member: member, 
    "delete": $$delete, 
    fromListWith: fromListWith, 
    fromList: fromList, 
    toList: toList, 
    lookup: lookup, 
    insert: insert, 
    checkValid: checkValid, 
    singleton: singleton, 
    isEmpty: isEmpty, 
    empty: empty, 
    showTree: showTree, 
    eqMap: eqMap, 
    showMap: showMap, 
    ordMap: ordMap, 
    semigroupMap: semigroupMap, 
    monoidMap: monoidMap, 
    functorMap: functorMap, 
    foldableMap: foldableMap, 
    traversableMap: traversableMap
};
