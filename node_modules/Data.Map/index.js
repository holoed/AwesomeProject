// Generated by psc-make version 0.6.9.5
"use strict";
var Prelude = require("Prelude");
var Data_Foldable = require("Data.Foldable");
var Data_Tuple = require("Data.Tuple");
var Data_Traversable = require("Data.Traversable");
var Data_Array = require("Data.Array");
var Data_Maybe = require("Data.Maybe");
var Data_Monoid = require("Data.Monoid");
var Leaf = (function () {
    function Leaf() {

    };
    Leaf.value = new Leaf();
    return Leaf;
})();
var Two = (function () {
    function Two(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    Two.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new Two(value0, value1, value2, value3);
                };
            };
        };
    };
    return Two;
})();
var Three = (function () {
    function Three(value0, value1, value2, value3, value4, value5, value6) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
        this.value6 = value6;
    };
    Three.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return function (value6) {
                                return new Three(value0, value1, value2, value3, value4, value5, value6);
                            };
                        };
                    };
                };
            };
        };
    };
    return Three;
})();
var TwoLeft = (function () {
    function TwoLeft(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    TwoLeft.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new TwoLeft(value0, value1, value2);
            };
        };
    };
    return TwoLeft;
})();
var TwoRight = (function () {
    function TwoRight(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    TwoRight.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new TwoRight(value0, value1, value2);
            };
        };
    };
    return TwoRight;
})();
var ThreeLeft = (function () {
    function ThreeLeft(value0, value1, value2, value3, value4, value5) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
    };
    ThreeLeft.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return new ThreeLeft(value0, value1, value2, value3, value4, value5);
                        };
                    };
                };
            };
        };
    };
    return ThreeLeft;
})();
var ThreeMiddle = (function () {
    function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
    };
    ThreeMiddle.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
                        };
                    };
                };
            };
        };
    };
    return ThreeMiddle;
})();
var ThreeRight = (function () {
    function ThreeRight(value0, value1, value2, value3, value4, value5) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
    };
    ThreeRight.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return new ThreeRight(value0, value1, value2, value3, value4, value5);
                        };
                    };
                };
            };
        };
    };
    return ThreeRight;
})();
var KickUp = (function () {
    function KickUp(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    KickUp.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new KickUp(value0, value1, value2, value3);
                };
            };
        };
    };
    return KickUp;
})();
var values = function (_440) {
    if (_440 instanceof Leaf) {
        return [  ];
    };
    if (_440 instanceof Two) {
        return Prelude["++"](Data_Array.semigroupArray)(values(_440.value0))(Prelude["++"](Data_Array.semigroupArray)([ _440.value2 ])(values(_440.value3)));
    };
    if (_440 instanceof Three) {
        return Prelude["++"](Data_Array.semigroupArray)(values(_440.value0))(Prelude["++"](Data_Array.semigroupArray)([ _440.value2 ])(Prelude["++"](Data_Array.semigroupArray)(values(_440.value3))(Prelude["++"](Data_Array.semigroupArray)([ _440.value5 ])(values(_440.value6)))));
    };
    throw new Error("Failed pattern match");
};
var toList = function (_438) {
    if (_438 instanceof Leaf) {
        return [  ];
    };
    if (_438 instanceof Two) {
        return Prelude["++"](Data_Array.semigroupArray)(toList(_438.value0))(Prelude["++"](Data_Array.semigroupArray)([ new Data_Tuple.Tuple(_438.value1, _438.value2) ])(toList(_438.value3)));
    };
    if (_438 instanceof Three) {
        return Prelude["++"](Data_Array.semigroupArray)(toList(_438.value0))(Prelude["++"](Data_Array.semigroupArray)([ new Data_Tuple.Tuple(_438.value1, _438.value2) ])(Prelude["++"](Data_Array.semigroupArray)(toList(_438.value3))(Prelude["++"](Data_Array.semigroupArray)([ new Data_Tuple.Tuple(_438.value4, _438.value5) ])(toList(_438.value6)))));
    };
    throw new Error("Failed pattern match");
};
var size = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Array.length)(values);
var singleton = function (k) {
    return function (v) {
        return new Two(Leaf.value, k, v, Leaf.value);
    };
};
var showTree = function (__dict_Show_0) {
    return function (__dict_Show_1) {
        return function (_433) {
            if (_433 instanceof Leaf) {
                return "Leaf";
            };
            if (_433 instanceof Two) {
                return "Two (" + (showTree(__dict_Show_0)(__dict_Show_1)(_433.value0) + (") (" + (Prelude.show(__dict_Show_0)(_433.value1) + (") (" + (Prelude.show(__dict_Show_1)(_433.value2) + (") (" + (showTree(__dict_Show_0)(__dict_Show_1)(_433.value3) + ")")))))));
            };
            if (_433 instanceof Three) {
                return "Three (" + (showTree(__dict_Show_0)(__dict_Show_1)(_433.value0) + (") (" + (Prelude.show(__dict_Show_0)(_433.value1) + (") (" + (Prelude.show(__dict_Show_1)(_433.value2) + (") (" + (showTree(__dict_Show_0)(__dict_Show_1)(_433.value3) + (") (" + (Prelude.show(__dict_Show_0)(_433.value4) + (") (" + (Prelude.show(__dict_Show_1)(_433.value5) + (") (" + (showTree(__dict_Show_0)(__dict_Show_1)(_433.value6) + ")")))))))))))));
            };
            throw new Error("Failed pattern match");
        };
    };
};
var showMap = function (__dict_Show_2) {
    return function (__dict_Show_3) {
        return new Prelude.Show(function (m) {
            return "fromList " + Prelude.show(Prelude.showArray(Data_Tuple.showTuple(__dict_Show_2)(__dict_Show_3)))(toList(m));
        });
    };
};
var lookup = function (__copy___dict_Ord_6) {
    return function (__copy_k) {
        return function (__copy__435) {
            var __dict_Ord_6 = __copy___dict_Ord_6;
            var k = __copy_k;
            var _435 = __copy__435;
            tco: while (true) {
                if (_435 instanceof Leaf) {
                    return Data_Maybe.Nothing.value;
                };
                if (_435 instanceof Two && Prelude["=="](__dict_Ord_6["__superclass_Prelude.Eq_0"]())(k)(_435.value1)) {
                    return new Data_Maybe.Just(_435.value2);
                };
                if (_435 instanceof Two && Prelude["<"](__dict_Ord_6)(k)(_435.value1)) {
                    var __tco___dict_Ord_6 = __dict_Ord_6;
                    var __tco_k = k;
                    var __tco__435 = _435.value0;
                    __dict_Ord_6 = __tco___dict_Ord_6;
                    k = __tco_k;
                    _435 = __tco__435;
                    continue tco;
                };
                if (_435 instanceof Two) {
                    var __tco___dict_Ord_6 = __dict_Ord_6;
                    var __tco_k = k;
                    var __tco__435 = _435.value3;
                    __dict_Ord_6 = __tco___dict_Ord_6;
                    k = __tco_k;
                    _435 = __tco__435;
                    continue tco;
                };
                if (_435 instanceof Three && Prelude["=="](__dict_Ord_6["__superclass_Prelude.Eq_0"]())(k)(_435.value1)) {
                    return new Data_Maybe.Just(_435.value2);
                };
                if (_435 instanceof Three && Prelude["=="](__dict_Ord_6["__superclass_Prelude.Eq_0"]())(k)(_435.value4)) {
                    return new Data_Maybe.Just(_435.value5);
                };
                if (_435 instanceof Three && Prelude["<"](__dict_Ord_6)(k)(_435.value1)) {
                    var __tco___dict_Ord_6 = __dict_Ord_6;
                    var __tco_k = k;
                    var __tco__435 = _435.value0;
                    __dict_Ord_6 = __tco___dict_Ord_6;
                    k = __tco_k;
                    _435 = __tco__435;
                    continue tco;
                };
                if (_435 instanceof Three && (Prelude["<"](__dict_Ord_6)(_435.value1)(k) && Prelude["<="](__dict_Ord_6)(k)(_435.value4))) {
                    var __tco___dict_Ord_6 = __dict_Ord_6;
                    var __tco_k = k;
                    var __tco__435 = _435.value3;
                    __dict_Ord_6 = __tco___dict_Ord_6;
                    k = __tco_k;
                    _435 = __tco__435;
                    continue tco;
                };
                if (_435 instanceof Three) {
                    var __tco___dict_Ord_6 = __dict_Ord_6;
                    var __tco_k = k;
                    var __tco__435 = _435.value6;
                    __dict_Ord_6 = __tco___dict_Ord_6;
                    k = __tco_k;
                    _435 = __tco__435;
                    continue tco;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
};
var member = function (__dict_Ord_7) {
    return function (k) {
        return function (m) {
            return Data_Maybe.isJust(lookup(__dict_Ord_7)(k)(m));
        };
    };
};
var keys = function (_439) {
    if (_439 instanceof Leaf) {
        return [  ];
    };
    if (_439 instanceof Two) {
        return Prelude["++"](Data_Array.semigroupArray)(keys(_439.value0))(Prelude["++"](Data_Array.semigroupArray)([ _439.value1 ])(keys(_439.value3)));
    };
    if (_439 instanceof Three) {
        return Prelude["++"](Data_Array.semigroupArray)(keys(_439.value0))(Prelude["++"](Data_Array.semigroupArray)([ _439.value1 ])(Prelude["++"](Data_Array.semigroupArray)(keys(_439.value3))(Prelude["++"](Data_Array.semigroupArray)([ _439.value4 ])(keys(_439.value6)))));
    };
    throw new Error("Failed pattern match");
};
var isEmpty = function (_434) {
    if (_434 instanceof Leaf) {
        return true;
    };
    return false;
};
var functorMap = new Prelude.Functor(function (f) {
    return function (_441) {
        if (_441 instanceof Leaf) {
            return Leaf.value;
        };
        if (_441 instanceof Two) {
            return new Two(Prelude["<$>"](functorMap)(f)(_441.value0), _441.value1, f(_441.value2), Prelude["<$>"](functorMap)(f)(_441.value3));
        };
        if (_441 instanceof Three) {
            return new Three(Prelude["<$>"](functorMap)(f)(_441.value0), _441.value1, f(_441.value2), Prelude["<$>"](functorMap)(f)(_441.value3), _441.value4, f(_441.value5), Prelude["<$>"](functorMap)(f)(_441.value6));
        };
        throw new Error("Failed pattern match");
    };
});
var map = Prelude["<$>"](functorMap);
var fromZipper = function (__copy___dict_Ord_8) {
    return function (__copy__436) {
        return function (__copy__437) {
            var __dict_Ord_8 = __copy___dict_Ord_8;
            var _436 = __copy__436;
            var _437 = __copy__437;
            tco: while (true) {
                if (_436.length === 0) {
                    return _437;
                };
                if (_436.length >= 1) {
                    var _1804 = _436.slice(1);
                    if (_436[0] instanceof TwoLeft) {
                        var __tco___dict_Ord_8 = __dict_Ord_8;
                        var __tco__437 = new Two(_437, (_436[0]).value0, (_436[0]).value1, (_436[0]).value2);
                        __dict_Ord_8 = __tco___dict_Ord_8;
                        _436 = _1804;
                        _437 = __tco__437;
                        continue tco;
                    };
                };
                if (_436.length >= 1) {
                    var _1809 = _436.slice(1);
                    if (_436[0] instanceof TwoRight) {
                        var __tco___dict_Ord_8 = __dict_Ord_8;
                        var __tco__437 = new Two((_436[0]).value0, (_436[0]).value1, (_436[0]).value2, _437);
                        __dict_Ord_8 = __tco___dict_Ord_8;
                        _436 = _1809;
                        _437 = __tco__437;
                        continue tco;
                    };
                };
                if (_436.length >= 1) {
                    var _1817 = _436.slice(1);
                    if (_436[0] instanceof ThreeLeft) {
                        var __tco___dict_Ord_8 = __dict_Ord_8;
                        var __tco__437 = new Three(_437, (_436[0]).value0, (_436[0]).value1, (_436[0]).value2, (_436[0]).value3, (_436[0]).value4, (_436[0]).value5);
                        __dict_Ord_8 = __tco___dict_Ord_8;
                        _436 = _1817;
                        _437 = __tco__437;
                        continue tco;
                    };
                };
                if (_436.length >= 1) {
                    var _1825 = _436.slice(1);
                    if (_436[0] instanceof ThreeMiddle) {
                        var __tco___dict_Ord_8 = __dict_Ord_8;
                        var __tco__437 = new Three((_436[0]).value0, (_436[0]).value1, (_436[0]).value2, _437, (_436[0]).value3, (_436[0]).value4, (_436[0]).value5);
                        __dict_Ord_8 = __tco___dict_Ord_8;
                        _436 = _1825;
                        _437 = __tco__437;
                        continue tco;
                    };
                };
                if (_436.length >= 1) {
                    var _1833 = _436.slice(1);
                    if (_436[0] instanceof ThreeRight) {
                        var __tco___dict_Ord_8 = __dict_Ord_8;
                        var __tco__437 = new Three((_436[0]).value0, (_436[0]).value1, (_436[0]).value2, (_436[0]).value3, (_436[0]).value4, (_436[0]).value5, _437);
                        __dict_Ord_8 = __tco___dict_Ord_8;
                        _436 = _1833;
                        _437 = __tco__437;
                        continue tco;
                    };
                };
                throw new Error("Failed pattern match");
            };
        };
    };
};
var insert = function (__dict_Ord_9) {
    var up = function (__copy___dict_Ord_10) {
        return function (__copy__444) {
            return function (__copy__445) {
                var __dict_Ord_10 = __copy___dict_Ord_10;
                var _444 = __copy__444;
                var _445 = __copy__445;
                tco: while (true) {
                    if (_444.length === 0) {
                        return new Two(_445.value0, _445.value1, _445.value2, _445.value3);
                    };
                    if (_444.length >= 1) {
                        var _1848 = _444.slice(1);
                        if (_444[0] instanceof TwoLeft) {
                            return fromZipper(__dict_Ord_10)(_1848)(new Three(_445.value0, _445.value1, _445.value2, _445.value3, (_444[0]).value0, (_444[0]).value1, (_444[0]).value2));
                        };
                    };
                    if (_444.length >= 1) {
                        var _1857 = _444.slice(1);
                        if (_444[0] instanceof TwoRight) {
                            return fromZipper(__dict_Ord_10)(_1857)(new Three((_444[0]).value0, (_444[0]).value1, (_444[0]).value2, _445.value0, _445.value1, _445.value2, _445.value3));
                        };
                    };
                    if (_444.length >= 1) {
                        var _1869 = _444.slice(1);
                        if (_444[0] instanceof ThreeLeft) {
                            var __tco___dict_Ord_10 = __dict_Ord_10;
                            var __tco__445 = new KickUp(new Two(_445.value0, _445.value1, _445.value2, _445.value3), (_444[0]).value0, (_444[0]).value1, new Two((_444[0]).value2, (_444[0]).value3, (_444[0]).value4, (_444[0]).value5));
                            __dict_Ord_10 = __tco___dict_Ord_10;
                            _444 = _1869;
                            _445 = __tco__445;
                            continue tco;
                        };
                    };
                    if (_444.length >= 1) {
                        var _1881 = _444.slice(1);
                        if (_444[0] instanceof ThreeMiddle) {
                            var __tco___dict_Ord_10 = __dict_Ord_10;
                            var __tco__445 = new KickUp(new Two((_444[0]).value0, (_444[0]).value1, (_444[0]).value2, _445.value0), _445.value1, _445.value2, new Two(_445.value3, (_444[0]).value3, (_444[0]).value4, (_444[0]).value5));
                            __dict_Ord_10 = __tco___dict_Ord_10;
                            _444 = _1881;
                            _445 = __tco__445;
                            continue tco;
                        };
                    };
                    if (_444.length >= 1) {
                        var _1893 = _444.slice(1);
                        if (_444[0] instanceof ThreeRight) {
                            var __tco___dict_Ord_10 = __dict_Ord_10;
                            var __tco__445 = new KickUp(new Two((_444[0]).value0, (_444[0]).value1, (_444[0]).value2, (_444[0]).value3), (_444[0]).value4, (_444[0]).value5, new Two(_445.value0, _445.value1, _445.value2, _445.value3));
                            __dict_Ord_10 = __tco___dict_Ord_10;
                            _444 = _1893;
                            _445 = __tco__445;
                            continue tco;
                        };
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var down = function (__copy___dict_Ord_11) {
        return function (__copy_ctx) {
            return function (__copy_k) {
                return function (__copy_v) {
                    return function (__copy__443) {
                        var __dict_Ord_11 = __copy___dict_Ord_11;
                        var ctx = __copy_ctx;
                        var k = __copy_k;
                        var v = __copy_v;
                        var _443 = __copy__443;
                        tco: while (true) {
                            if (_443 instanceof Leaf) {
                                return up(__dict_Ord_11)(ctx)(new KickUp(Leaf.value, k, v, Leaf.value));
                            };
                            if (_443 instanceof Two && Prelude["=="](__dict_Ord_11["__superclass_Prelude.Eq_0"]())(k)(_443.value1)) {
                                return fromZipper(__dict_Ord_11)(ctx)(new Two(_443.value0, k, v, _443.value3));
                            };
                            if (_443 instanceof Two && Prelude["<"](__dict_Ord_11)(k)(_443.value1)) {
                                var __tco___dict_Ord_11 = __dict_Ord_11;
                                var __tco_ctx = Prelude[":"](new TwoLeft(_443.value1, _443.value2, _443.value3))(ctx);
                                var __tco_k = k;
                                var __tco_v = v;
                                var __tco__443 = _443.value0;
                                __dict_Ord_11 = __tco___dict_Ord_11;
                                ctx = __tco_ctx;
                                k = __tco_k;
                                v = __tco_v;
                                _443 = __tco__443;
                                continue tco;
                            };
                            if (_443 instanceof Two) {
                                var __tco___dict_Ord_11 = __dict_Ord_11;
                                var __tco_ctx = Prelude[":"](new TwoRight(_443.value0, _443.value1, _443.value2))(ctx);
                                var __tco_k = k;
                                var __tco_v = v;
                                var __tco__443 = _443.value3;
                                __dict_Ord_11 = __tco___dict_Ord_11;
                                ctx = __tco_ctx;
                                k = __tco_k;
                                v = __tco_v;
                                _443 = __tco__443;
                                continue tco;
                            };
                            if (_443 instanceof Three && Prelude["=="](__dict_Ord_11["__superclass_Prelude.Eq_0"]())(k)(_443.value1)) {
                                return fromZipper(__dict_Ord_11)(ctx)(new Three(_443.value0, k, v, _443.value3, _443.value4, _443.value5, _443.value6));
                            };
                            if (_443 instanceof Three && Prelude["=="](__dict_Ord_11["__superclass_Prelude.Eq_0"]())(k)(_443.value4)) {
                                return fromZipper(__dict_Ord_11)(ctx)(new Three(_443.value0, _443.value1, _443.value2, _443.value3, k, v, _443.value6));
                            };
                            if (_443 instanceof Three && Prelude["<"](__dict_Ord_11)(k)(_443.value1)) {
                                var __tco___dict_Ord_11 = __dict_Ord_11;
                                var __tco_ctx = Prelude[":"](new ThreeLeft(_443.value1, _443.value2, _443.value3, _443.value4, _443.value5, _443.value6))(ctx);
                                var __tco_k = k;
                                var __tco_v = v;
                                var __tco__443 = _443.value0;
                                __dict_Ord_11 = __tco___dict_Ord_11;
                                ctx = __tco_ctx;
                                k = __tco_k;
                                v = __tco_v;
                                _443 = __tco__443;
                                continue tco;
                            };
                            if (_443 instanceof Three && (Prelude["<"](__dict_Ord_11)(_443.value1)(k) && Prelude["<="](__dict_Ord_11)(k)(_443.value4))) {
                                var __tco___dict_Ord_11 = __dict_Ord_11;
                                var __tco_ctx = Prelude[":"](new ThreeMiddle(_443.value0, _443.value1, _443.value2, _443.value4, _443.value5, _443.value6))(ctx);
                                var __tco_k = k;
                                var __tco_v = v;
                                var __tco__443 = _443.value3;
                                __dict_Ord_11 = __tco___dict_Ord_11;
                                ctx = __tco_ctx;
                                k = __tco_k;
                                v = __tco_v;
                                _443 = __tco__443;
                                continue tco;
                            };
                            if (_443 instanceof Three) {
                                var __tco___dict_Ord_11 = __dict_Ord_11;
                                var __tco_ctx = Prelude[":"](new ThreeRight(_443.value0, _443.value1, _443.value2, _443.value3, _443.value4, _443.value5))(ctx);
                                var __tco_k = k;
                                var __tco_v = v;
                                var __tco__443 = _443.value6;
                                __dict_Ord_11 = __tco___dict_Ord_11;
                                ctx = __tco_ctx;
                                k = __tco_k;
                                v = __tco_v;
                                _443 = __tco__443;
                                continue tco;
                            };
                            throw new Error("Failed pattern match");
                        };
                    };
                };
            };
        };
    };
    return down(__dict_Ord_9)([  ]);
};
var foldableMap = new Data_Foldable.Foldable(function (__dict_Monoid_12) {
    return function (f) {
        return function (m) {
            return Data_Foldable.foldMap(Data_Foldable.foldableArray)(__dict_Monoid_12)(f)(values(m));
        };
    };
}, function (f) {
    return function (z) {
        return function (m) {
            return Data_Foldable.foldl(Data_Foldable.foldableArray)(f)(z)(values(m));
        };
    };
}, function (f) {
    return function (z) {
        return function (m) {
            return Data_Foldable.foldr(Data_Foldable.foldableArray)(f)(z)(values(m));
        };
    };
});
var eqMap = function (__dict_Eq_13) {
    return function (__dict_Eq_14) {
        return new Prelude.Eq(function (m1) {
            return function (m2) {
                return !Prelude["=="](eqMap(__dict_Eq_13)(__dict_Eq_14))(m1)(m2);
            };
        }, function (m1) {
            return function (m2) {
                return Prelude["=="](Prelude.eqArray(Data_Tuple.eqTuple(__dict_Eq_13)(__dict_Eq_14)))(toList(m1))(toList(m2));
            };
        });
    };
};
var ordMap = function (__dict_Ord_4) {
    return function (__dict_Ord_5) {
        return new Prelude.Ord(function () {
            return eqMap(__dict_Ord_4["__superclass_Prelude.Eq_0"]())(__dict_Ord_5["__superclass_Prelude.Eq_0"]());
        }, function (m1) {
            return function (m2) {
                return Prelude.compare(Prelude.ordArray(Data_Tuple.ordTuple(__dict_Ord_4)(__dict_Ord_5)))(toList(m1))(toList(m2));
            };
        });
    };
};
var empty = Leaf.value;
var fromList = function (__dict_Ord_15) {
    return Data_Foldable.foldl(Data_Foldable.foldableArray)(function (m) {
        return function (_431) {
            return insert(__dict_Ord_15)(_431.value0)(_431.value1)(m);
        };
    })(empty);
};
var $$delete = function (__dict_Ord_17) {
    var up = function (__copy___dict_Ord_18) {
        return function (__copy__447) {
            return function (__copy__448) {
                var __dict_Ord_18 = __copy___dict_Ord_18;
                var _447 = __copy__447;
                var _448 = __copy__448;
                tco: while (true) {
                    if (_447.length === 0) {
                        return _448;
                    };
                    if (_447.length >= 1) {
                        var _1954 = _447.slice(1);
                        if (_447[0] instanceof TwoLeft && ((_447[0]).value2 instanceof Leaf && _448 instanceof Leaf)) {
                            return fromZipper(__dict_Ord_18)(_1954)(new Two(Leaf.value, (_447[0]).value0, (_447[0]).value1, Leaf.value));
                        };
                    };
                    if (_447.length >= 1) {
                        var _1959 = _447.slice(1);
                        if (_447[0] instanceof TwoRight && ((_447[0]).value0 instanceof Leaf && _448 instanceof Leaf)) {
                            return fromZipper(__dict_Ord_18)(_1959)(new Two(Leaf.value, (_447[0]).value1, (_447[0]).value2, Leaf.value));
                        };
                    };
                    if (_447.length >= 1) {
                        var _1968 = _447.slice(1);
                        if (_447[0] instanceof TwoLeft && (_447[0]).value2 instanceof Two) {
                            var __tco___dict_Ord_18 = __dict_Ord_18;
                            var __tco__448 = new Three(_448, (_447[0]).value0, (_447[0]).value1, (_447[0]).value2.value0, (_447[0]).value2.value1, (_447[0]).value2.value2, (_447[0]).value2.value3);
                            __dict_Ord_18 = __tco___dict_Ord_18;
                            _447 = _1968;
                            _448 = __tco__448;
                            continue tco;
                        };
                    };
                    if (_447.length >= 1) {
                        var _1977 = _447.slice(1);
                        if (_447[0] instanceof TwoRight && (_447[0]).value0 instanceof Two) {
                            var __tco___dict_Ord_18 = __dict_Ord_18;
                            var __tco__448 = new Three((_447[0]).value0.value0, (_447[0]).value0.value1, (_447[0]).value0.value2, (_447[0]).value0.value3, (_447[0]).value1, (_447[0]).value2, _448);
                            __dict_Ord_18 = __tco___dict_Ord_18;
                            _447 = _1977;
                            _448 = __tco__448;
                            continue tco;
                        };
                    };
                    if (_447.length >= 1) {
                        var _1989 = _447.slice(1);
                        if (_447[0] instanceof TwoLeft && (_447[0]).value2 instanceof Three) {
                            return fromZipper(__dict_Ord_18)(_1989)(new Two(new Two(_448, (_447[0]).value0, (_447[0]).value1, (_447[0]).value2.value0), (_447[0]).value2.value1, (_447[0]).value2.value2, new Two((_447[0]).value2.value3, (_447[0]).value2.value4, (_447[0]).value2.value5, (_447[0]).value2.value6)));
                        };
                    };
                    if (_447.length >= 1) {
                        var _2001 = _447.slice(1);
                        if (_447[0] instanceof TwoRight && (_447[0]).value0 instanceof Three) {
                            return fromZipper(__dict_Ord_18)(_2001)(new Two(new Two((_447[0]).value0.value0, (_447[0]).value0.value1, (_447[0]).value0.value2, (_447[0]).value0.value3), (_447[0]).value0.value4, (_447[0]).value0.value5, new Two((_447[0]).value0.value6, (_447[0]).value1, (_447[0]).value2, _448)));
                        };
                    };
                    if (_447.length >= 1) {
                        var _2009 = _447.slice(1);
                        if (_447[0] instanceof ThreeLeft && ((_447[0]).value2 instanceof Leaf && ((_447[0]).value5 instanceof Leaf && _448 instanceof Leaf))) {
                            return fromZipper(__dict_Ord_18)(_2009)(new Three(Leaf.value, (_447[0]).value0, (_447[0]).value1, Leaf.value, (_447[0]).value3, (_447[0]).value4, Leaf.value));
                        };
                    };
                    if (_447.length >= 1) {
                        var _2017 = _447.slice(1);
                        if (_447[0] instanceof ThreeMiddle && ((_447[0]).value0 instanceof Leaf && ((_447[0]).value5 instanceof Leaf && _448 instanceof Leaf))) {
                            return fromZipper(__dict_Ord_18)(_2017)(new Three(Leaf.value, (_447[0]).value1, (_447[0]).value2, Leaf.value, (_447[0]).value3, (_447[0]).value4, Leaf.value));
                        };
                    };
                    if (_447.length >= 1) {
                        var _2025 = _447.slice(1);
                        if (_447[0] instanceof ThreeRight && ((_447[0]).value0 instanceof Leaf && ((_447[0]).value3 instanceof Leaf && _448 instanceof Leaf))) {
                            return fromZipper(__dict_Ord_18)(_2025)(new Three(Leaf.value, (_447[0]).value1, (_447[0]).value2, Leaf.value, (_447[0]).value4, (_447[0]).value5, Leaf.value));
                        };
                    };
                    if (_447.length >= 1) {
                        var _2037 = _447.slice(1);
                        if (_447[0] instanceof ThreeLeft && (_447[0]).value2 instanceof Two) {
                            return fromZipper(__dict_Ord_18)(_2037)(new Two(new Three(_448, (_447[0]).value0, (_447[0]).value1, (_447[0]).value2.value0, (_447[0]).value2.value1, (_447[0]).value2.value2, (_447[0]).value2.value3), (_447[0]).value3, (_447[0]).value4, (_447[0]).value5));
                        };
                    };
                    if (_447.length >= 1) {
                        var _2049 = _447.slice(1);
                        if (_447[0] instanceof ThreeMiddle && (_447[0]).value0 instanceof Two) {
                            return fromZipper(__dict_Ord_18)(_2049)(new Two(new Three((_447[0]).value0.value0, (_447[0]).value0.value1, (_447[0]).value0.value2, (_447[0]).value0.value3, (_447[0]).value1, (_447[0]).value2, _448), (_447[0]).value3, (_447[0]).value4, (_447[0]).value5));
                        };
                    };
                    if (_447.length >= 1) {
                        var _2061 = _447.slice(1);
                        if (_447[0] instanceof ThreeMiddle && (_447[0]).value5 instanceof Two) {
                            return fromZipper(__dict_Ord_18)(_2061)(new Two((_447[0]).value0, (_447[0]).value1, (_447[0]).value2, new Three(_448, (_447[0]).value3, (_447[0]).value4, (_447[0]).value5.value0, (_447[0]).value5.value1, (_447[0]).value5.value2, (_447[0]).value5.value3)));
                        };
                    };
                    if (_447.length >= 1) {
                        var _2073 = _447.slice(1);
                        if (_447[0] instanceof ThreeRight && (_447[0]).value3 instanceof Two) {
                            return fromZipper(__dict_Ord_18)(_2073)(new Two((_447[0]).value0, (_447[0]).value1, (_447[0]).value2, new Three((_447[0]).value3.value0, (_447[0]).value3.value1, (_447[0]).value3.value2, (_447[0]).value3.value3, (_447[0]).value4, (_447[0]).value5, _448)));
                        };
                    };
                    if (_447.length >= 1) {
                        var _2088 = _447.slice(1);
                        if (_447[0] instanceof ThreeLeft && (_447[0]).value2 instanceof Three) {
                            return fromZipper(__dict_Ord_18)(_2088)(new Three(new Two(_448, (_447[0]).value0, (_447[0]).value1, (_447[0]).value2.value0), (_447[0]).value2.value1, (_447[0]).value2.value2, new Two((_447[0]).value2.value3, (_447[0]).value2.value4, (_447[0]).value2.value5, (_447[0]).value2.value6), (_447[0]).value3, (_447[0]).value4, (_447[0]).value5));
                        };
                    };
                    if (_447.length >= 1) {
                        var _2103 = _447.slice(1);
                        if (_447[0] instanceof ThreeMiddle && (_447[0]).value0 instanceof Three) {
                            return fromZipper(__dict_Ord_18)(_2103)(new Three(new Two((_447[0]).value0.value0, (_447[0]).value0.value1, (_447[0]).value0.value2, (_447[0]).value0.value3), (_447[0]).value0.value4, (_447[0]).value0.value5, new Two((_447[0]).value0.value6, (_447[0]).value1, (_447[0]).value2, _448), (_447[0]).value3, (_447[0]).value4, (_447[0]).value5));
                        };
                    };
                    if (_447.length >= 1) {
                        var _2118 = _447.slice(1);
                        if (_447[0] instanceof ThreeMiddle && (_447[0]).value5 instanceof Three) {
                            return fromZipper(__dict_Ord_18)(_2118)(new Three((_447[0]).value0, (_447[0]).value1, (_447[0]).value2, new Two(_448, (_447[0]).value3, (_447[0]).value4, (_447[0]).value5.value0), (_447[0]).value5.value1, (_447[0]).value5.value2, new Two((_447[0]).value5.value3, (_447[0]).value5.value4, (_447[0]).value5.value5, (_447[0]).value5.value6)));
                        };
                    };
                    if (_447.length >= 1) {
                        var _2133 = _447.slice(1);
                        if (_447[0] instanceof ThreeRight && (_447[0]).value3 instanceof Three) {
                            return fromZipper(__dict_Ord_18)(_2133)(new Three((_447[0]).value0, (_447[0]).value1, (_447[0]).value2, new Two((_447[0]).value3.value0, (_447[0]).value3.value1, (_447[0]).value3.value2, (_447[0]).value3.value3), (_447[0]).value3.value4, (_447[0]).value3.value5, new Two((_447[0]).value3.value6, (_447[0]).value4, (_447[0]).value5, _448)));
                        };
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var removeMaxNode = function (__copy___dict_Ord_19) {
        return function (__copy_ctx) {
            return function (__copy__450) {
                var __dict_Ord_19 = __copy___dict_Ord_19;
                var ctx = __copy_ctx;
                var _450 = __copy__450;
                tco: while (true) {
                    if (_450 instanceof Two && (_450.value0 instanceof Leaf && _450.value3 instanceof Leaf)) {
                        return up(__dict_Ord_19)(ctx)(Leaf.value);
                    };
                    if (_450 instanceof Two) {
                        var __tco___dict_Ord_19 = __dict_Ord_19;
                        var __tco_ctx = Prelude[":"](new TwoRight(_450.value0, _450.value1, _450.value2))(ctx);
                        var __tco__450 = _450.value3;
                        __dict_Ord_19 = __tco___dict_Ord_19;
                        ctx = __tco_ctx;
                        _450 = __tco__450;
                        continue tco;
                    };
                    if (_450 instanceof Three && (_450.value0 instanceof Leaf && (_450.value3 instanceof Leaf && _450.value6 instanceof Leaf))) {
                        return up(__dict_Ord_19)(Prelude[":"](new TwoRight(Leaf.value, _450.value1, _450.value2))(ctx))(Leaf.value);
                    };
                    if (_450 instanceof Three) {
                        var __tco___dict_Ord_19 = __dict_Ord_19;
                        var __tco_ctx = Prelude[":"](new ThreeRight(_450.value0, _450.value1, _450.value2, _450.value3, _450.value4, _450.value5))(ctx);
                        var __tco__450 = _450.value6;
                        __dict_Ord_19 = __tco___dict_Ord_19;
                        ctx = __tco_ctx;
                        _450 = __tco__450;
                        continue tco;
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var maxNode = function (__copy___dict_Ord_20) {
        return function (__copy__449) {
            var __dict_Ord_20 = __copy___dict_Ord_20;
            var _449 = __copy__449;
            tco: while (true) {
                if (_449 instanceof Two && _449.value3 instanceof Leaf) {
                    return {
                        key: _449.value1, 
                        value: _449.value2
                    };
                };
                if (_449 instanceof Two) {
                    var __tco___dict_Ord_20 = __dict_Ord_20;
                    var __tco__449 = _449.value3;
                    __dict_Ord_20 = __tco___dict_Ord_20;
                    _449 = __tco__449;
                    continue tco;
                };
                if (_449 instanceof Three && _449.value6 instanceof Leaf) {
                    return {
                        key: _449.value4, 
                        value: _449.value5
                    };
                };
                if (_449 instanceof Three) {
                    var __tco___dict_Ord_20 = __dict_Ord_20;
                    var __tco__449 = _449.value6;
                    __dict_Ord_20 = __tco___dict_Ord_20;
                    _449 = __tco__449;
                    continue tco;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var down = function (__copy___dict_Ord_21) {
        return function (__copy_ctx) {
            return function (__copy_k) {
                return function (__copy__446) {
                    var __dict_Ord_21 = __copy___dict_Ord_21;
                    var ctx = __copy_ctx;
                    var k = __copy_k;
                    var _446 = __copy__446;
                    tco: while (true) {
                        if (_446 instanceof Leaf) {
                            return fromZipper(__dict_Ord_21)(ctx)(Leaf.value);
                        };
                        if (_446 instanceof Two && (_446.value0 instanceof Leaf && (_446.value3 instanceof Leaf && Prelude["=="](__dict_Ord_21["__superclass_Prelude.Eq_0"]())(k)(_446.value1)))) {
                            return up(__dict_Ord_21)(ctx)(Leaf.value);
                        };
                        if (_446 instanceof Two) {
                            if (Prelude["=="](__dict_Ord_21["__superclass_Prelude.Eq_0"]())(k)(_446.value1)) {
                                var max = maxNode(__dict_Ord_21)(_446.value0);
                                return removeMaxNode(__dict_Ord_21)(Prelude[":"](new TwoLeft(max.key, max.value, _446.value3))(ctx))(_446.value0);
                            };
                            if (Prelude["<"](__dict_Ord_21)(k)(_446.value1)) {
                                var __tco___dict_Ord_21 = __dict_Ord_21;
                                var __tco_ctx = Prelude[":"](new TwoLeft(_446.value1, _446.value2, _446.value3))(ctx);
                                var __tco_k = k;
                                var __tco__446 = _446.value0;
                                __dict_Ord_21 = __tco___dict_Ord_21;
                                ctx = __tco_ctx;
                                k = __tco_k;
                                _446 = __tco__446;
                                continue tco;
                            };
                            if (Prelude.otherwise) {
                                var __tco___dict_Ord_21 = __dict_Ord_21;
                                var __tco_ctx = Prelude[":"](new TwoRight(_446.value0, _446.value1, _446.value2))(ctx);
                                var __tco_k = k;
                                var __tco__446 = _446.value3;
                                __dict_Ord_21 = __tco___dict_Ord_21;
                                ctx = __tco_ctx;
                                k = __tco_k;
                                _446 = __tco__446;
                                continue tco;
                            };
                        };
                        if (_446 instanceof Three && (_446.value0 instanceof Leaf && (_446.value3 instanceof Leaf && _446.value6 instanceof Leaf))) {
                            if (Prelude["=="](__dict_Ord_21["__superclass_Prelude.Eq_0"]())(k)(_446.value1)) {
                                return fromZipper(__dict_Ord_21)(ctx)(new Two(Leaf.value, _446.value4, _446.value5, Leaf.value));
                            };
                            if (Prelude["=="](__dict_Ord_21["__superclass_Prelude.Eq_0"]())(k)(_446.value4)) {
                                return fromZipper(__dict_Ord_21)(ctx)(new Two(Leaf.value, _446.value1, _446.value2, Leaf.value));
                            };
                        };
                        if (_446 instanceof Three) {
                            if (Prelude["=="](__dict_Ord_21["__superclass_Prelude.Eq_0"]())(k)(_446.value1)) {
                                var max = maxNode(__dict_Ord_21)(_446.value0);
                                return removeMaxNode(__dict_Ord_21)(Prelude[":"](new ThreeLeft(max.key, max.value, _446.value3, _446.value4, _446.value5, _446.value6))(ctx))(_446.value0);
                            };
                            if (Prelude["=="](__dict_Ord_21["__superclass_Prelude.Eq_0"]())(k)(_446.value4)) {
                                var max = maxNode(__dict_Ord_21)(_446.value3);
                                return removeMaxNode(__dict_Ord_21)(Prelude[":"](new ThreeMiddle(_446.value0, _446.value1, _446.value2, max.key, max.value, _446.value6))(ctx))(_446.value3);
                            };
                            if (Prelude["<"](__dict_Ord_21)(k)(_446.value1)) {
                                var __tco___dict_Ord_21 = __dict_Ord_21;
                                var __tco_ctx = Prelude[":"](new ThreeLeft(_446.value1, _446.value2, _446.value3, _446.value4, _446.value5, _446.value6))(ctx);
                                var __tco_k = k;
                                var __tco__446 = _446.value0;
                                __dict_Ord_21 = __tco___dict_Ord_21;
                                ctx = __tco_ctx;
                                k = __tco_k;
                                _446 = __tco__446;
                                continue tco;
                            };
                            if (Prelude["<"](__dict_Ord_21)(_446.value1)(k) && Prelude["<"](__dict_Ord_21)(k)(_446.value4)) {
                                var __tco___dict_Ord_21 = __dict_Ord_21;
                                var __tco_ctx = Prelude[":"](new ThreeMiddle(_446.value0, _446.value1, _446.value2, _446.value4, _446.value5, _446.value6))(ctx);
                                var __tco_k = k;
                                var __tco__446 = _446.value3;
                                __dict_Ord_21 = __tco___dict_Ord_21;
                                ctx = __tco_ctx;
                                k = __tco_k;
                                _446 = __tco__446;
                                continue tco;
                            };
                            if (Prelude.otherwise) {
                                var __tco___dict_Ord_21 = __dict_Ord_21;
                                var __tco_ctx = Prelude[":"](new ThreeRight(_446.value0, _446.value1, _446.value2, _446.value3, _446.value4, _446.value5))(ctx);
                                var __tco_k = k;
                                var __tco__446 = _446.value6;
                                __dict_Ord_21 = __tco___dict_Ord_21;
                                ctx = __tco_ctx;
                                k = __tco_k;
                                _446 = __tco__446;
                                continue tco;
                            };
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        };
    };
    return down(__dict_Ord_17)([  ]);
};
var checkValid = function (tree) {
    var allHeights = function (_442) {
        if (_442 instanceof Leaf) {
            return [ 0 ];
        };
        if (_442 instanceof Two) {
            return Data_Array.map(function (n) {
                return n + 1;
            })(Prelude["++"](Data_Array.semigroupArray)(allHeights(_442.value0))(allHeights(_442.value3)));
        };
        if (_442 instanceof Three) {
            return Data_Array.map(function (n) {
                return n + 1;
            })(Prelude["++"](Data_Array.semigroupArray)(allHeights(_442.value0))(Prelude["++"](Data_Array.semigroupArray)(allHeights(_442.value3))(allHeights(_442.value6))));
        };
        throw new Error("Failed pattern match");
    };
    return Data_Array.length(Data_Array.nub(Prelude.eqNumber)(allHeights(tree))) === 1;
};
var alter = function (__dict_Ord_22) {
    return function (f) {
        return function (k) {
            return function (m) {
                var _2218 = f(lookup(__dict_Ord_22)(k)(m));
                if (_2218 instanceof Data_Maybe.Nothing) {
                    return $$delete(__dict_Ord_22)(k)(m);
                };
                if (_2218 instanceof Data_Maybe.Just) {
                    return insert(__dict_Ord_22)(k)(_2218.value0)(m);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
};
var fromListWith = function (__dict_Ord_23) {
    return function (f) {
        var combine = function (v) {
            return function (_451) {
                if (_451 instanceof Data_Maybe.Just) {
                    return Data_Maybe.Just.create(f(v)(_451.value0));
                };
                if (_451 instanceof Data_Maybe.Nothing) {
                    return new Data_Maybe.Just(v);
                };
                throw new Error("Failed pattern match");
            };
        };
        return Data_Foldable.foldl(Data_Foldable.foldableArray)(function (m) {
            return function (_432) {
                return alter(__dict_Ord_23)(combine(_432.value1))(_432.value0)(m);
            };
        })(empty);
    };
};
var unionWith = function (__dict_Ord_24) {
    return function (f) {
        return function (m1) {
            return function (m2) {
                var go = function (m) {
                    return function (_452) {
                        return alter(__dict_Ord_24)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Data_Maybe.maybe(_452.value1)(f(_452.value1))))(_452.value0)(m);
                    };
                };
                return Data_Foldable.foldl(Data_Foldable.foldableArray)(go)(m2)(toList(m1));
            };
        };
    };
};
var union = function (__dict_Ord_25) {
    return unionWith(__dict_Ord_25)(Prelude["const"]);
};
var semigroupMap = function (__dict_Ord_26) {
    return new Prelude.Semigroup(union(__dict_Ord_26));
};
var monoidMap = function (__dict_Ord_16) {
    return new Data_Monoid.Monoid(function () {
        return semigroupMap(__dict_Ord_16);
    }, empty);
};
var traversableMap = function (__dict_Ord_27) {
    return new Data_Traversable.Traversable(function () {
        return foldableMap;
    }, function () {
        return functorMap;
    }, function (__dict_Applicative_29) {
        return Data_Traversable.traverse(traversableMap(__dict_Ord_27))(__dict_Applicative_29)(Prelude.id(Prelude.categoryArr));
    }, function (__dict_Applicative_28) {
        return function (f) {
            return function (ms) {
                return Data_Foldable.foldr(Data_Foldable.foldableArray)(function (x) {
                    return function (acc) {
                        return Prelude["<*>"](__dict_Applicative_28["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_28["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(union(__dict_Ord_27))(x))(acc);
                    };
                })(Prelude.pure(__dict_Applicative_28)(empty))(Prelude["<$>"](Data_Array.functorArray)(Prelude["<$>"]((__dict_Applicative_28["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.uncurry(singleton)))(Prelude["<$>"](Data_Array.functorArray)(Data_Traversable.traverse(Data_Traversable.traversableTuple)(__dict_Applicative_28)(f))(toList(ms))));
            };
        };
    });
};
var unions = function (__dict_Ord_30) {
    return Data_Foldable.foldl(Data_Foldable.foldableArray)(union(__dict_Ord_30))(empty);
};
var update = function (__dict_Ord_31) {
    return function (f) {
        return function (k) {
            return function (m) {
                return alter(__dict_Ord_31)(Data_Maybe.maybe(Data_Maybe.Nothing.value)(f))(k)(m);
            };
        };
    };
};
module.exports = {
    size: size, 
    map: map, 
    unions: unions, 
    unionWith: unionWith, 
    union: union, 
    values: values, 
    keys: keys, 
    update: update, 
    alter: alter, 
    member: member, 
    "delete": $$delete, 
    fromListWith: fromListWith, 
    fromList: fromList, 
    toList: toList, 
    lookup: lookup, 
    insert: insert, 
    checkValid: checkValid, 
    singleton: singleton, 
    isEmpty: isEmpty, 
    empty: empty, 
    showTree: showTree, 
    eqMap: eqMap, 
    showMap: showMap, 
    ordMap: ordMap, 
    semigroupMap: semigroupMap, 
    monoidMap: monoidMap, 
    functorMap: functorMap, 
    foldableMap: foldableMap, 
    traversableMap: traversableMap
};
