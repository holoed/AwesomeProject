// Generated by psc-make version 0.6.9.5
"use strict";
var Prelude = require("Prelude");
var HttpClient = require("HttpClient");
var Data_Traversable = require("Data.Traversable");
var Data_String = require("Data.String");
var Data_Function = require("Data.Function");
var Data_Either = require("Data.Either");
var Control_Bind = require("Control.Bind");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Control_Monad_Trans = require("Control.Monad.Trans");
var Control_Monad_Cont_Trans = require("Control.Monad.Cont.Trans");
var Data_Foreign = require("Data.Foreign");
var Data_Foreign_Class = require("Data.Foreign.Class");
var Data_Foldable = require("Data.Foldable");
var Data_Array = require("Data.Array");
var replaceSpaceWithPlus = Prelude["<<<"](Prelude.semigroupoidArr)(Data_String.joinWith("+"))(Data_String.split(" "));
var getMyList = function (url) {
    return HttpClient.fetchUrl(url);
};
var fetchTVShowEpisode = function (episode) {
    var url = "http://www.omdbapi.com/?t=" + (replaceSpaceWithPlus(episode.series) + ("&Season=" + (episode.season + ("&Episode=" + (episode.episode + "&plot=full&type=series&r=json")))));
    return Prelude["<$>"](Control_Monad_Cont_Trans.functorContT(Control_Monad_Eff.monadEff))(function (details) {
        var _2274 = {};
        for (var _2275 in details) {
            if (details.hasOwnProperty(_2275)) {
                _2274[_2275] = details[_2275];
            };
        };
        _2274.source = episode.source;
        return _2274;
    })(HttpClient.fetchUrl(url));
};
var fetchTVShowEpisodesDetails = function (episodesSpecs) {
    return Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_Cont_Trans.applicativeContT(Control_Monad_Eff.functorEff)(Control_Monad_Eff.monadEff))(Prelude["<$>"](Data_Array.functorArray)(fetchTVShowEpisode)(episodesSpecs));
};
var fetchTVShowsSeasonsDetails = function (tvshow) {
    var f = function (x) {
        return Prelude["<$>"](Control_Monad_Cont_Trans.functorContT(Control_Monad_Eff.monadEff))(function (eps) {
            return {
                season: x.season, 
                episodes: eps
            };
        })(fetchTVShowEpisodesDetails(x.episodes));
    };
    return Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_Cont_Trans.applicativeContT(Control_Monad_Eff.functorEff)(Control_Monad_Eff.monadEff))(Prelude["<$>"](Data_Array.functorArray)(f)(tvshow.seasons));
};
var fetchTVShow = function (tvshow) {
    var url = "http://www.omdbapi.com/?t=" + (replaceSpaceWithPlus(tvshow.title) + ("&y=" + (tvshow.year + "&plot=full&type=series&r=json")));
    return HttpClient.fetchUrl(url);
};
var fetchTVShowsDetails = function (tvShowsSpecs) {
    var f = function (x) {
        return Prelude[">>="](Control_Monad_Cont_Trans.bindContT(Control_Monad_Eff.monadEff))(fetchTVShow(x))(function (_50) {
            return Prelude[">>="](Control_Monad_Cont_Trans.bindContT(Control_Monad_Eff.monadEff))(fetchTVShowsSeasonsDetails(x))(function (_49) {
                return Prelude["return"](Control_Monad_Cont_Trans.monadContT(Control_Monad_Eff.monadEff))((function () {
                    var _2278 = {};
                    for (var _2279 in _50) {
                        if (_50.hasOwnProperty(_2279)) {
                            _2278[_2279] = _50[_2279];
                        };
                    };
                    _2278.seasons = _49;
                    return _2278;
                })());
            });
        });
    };
    return Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_Cont_Trans.applicativeContT(Control_Monad_Eff.functorEff)(Control_Monad_Eff.monadEff))(Prelude["<$>"](Data_Array.functorArray)(f)(tvShowsSpecs));
};
var fetchMovie = function (movie) {
    var url = "http://www.omdbapi.com/?t=" + (replaceSpaceWithPlus(movie.title) + ("&y=" + (movie.year + "&plot=full&type=movie&r=json")));
    return Prelude["<$>"](Control_Monad_Cont_Trans.functorContT(Control_Monad_Eff.monadEff))(function (details) {
        var _2280 = {};
        for (var _2281 in details) {
            if (details.hasOwnProperty(_2281)) {
                _2280[_2281] = details[_2281];
            };
        };
        _2280.source = movie.source;
        return _2280;
    })(HttpClient.fetchUrl(url));
};
var fetchMoviesDetails = function (moviesSpecs) {
    return Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_Cont_Trans.applicativeContT(Control_Monad_Eff.functorEff)(Control_Monad_Eff.monadEff))(Prelude["<$>"](Data_Array.functorArray)(fetchMovie)(moviesSpecs));
};
var getState = function (url) {
    return Prelude[">>="](Control_Monad_Cont_Trans.bindContT(Control_Monad_Eff.monadEff))(getMyList(url))(function (_48) {
        return Prelude[">>="](Control_Monad_Cont_Trans.bindContT(Control_Monad_Eff.monadEff))(fetchMoviesDetails(_48.movies))(function (_47) {
            return Prelude[">>="](Control_Monad_Cont_Trans.bindContT(Control_Monad_Eff.monadEff))(fetchTVShowsDetails(_48.tvshows))(function (_46) {
                return Prelude["return"](Control_Monad_Cont_Trans.monadContT(Control_Monad_Eff.monadEff))({
                    movies: _47, 
                    tvshows: _46
                });
            });
        });
    });
};
module.exports = {
    replaceSpaceWithPlus: replaceSpaceWithPlus, 
    fetchTVShowEpisode: fetchTVShowEpisode, 
    fetchTVShow: fetchTVShow, 
    fetchMovie: fetchMovie, 
    fetchTVShowEpisodesDetails: fetchTVShowEpisodesDetails, 
    fetchTVShowsSeasonsDetails: fetchTVShowsSeasonsDetails, 
    fetchTVShowsDetails: fetchTVShowsDetails, 
    fetchMoviesDetails: fetchMoviesDetails, 
    getMyList: getMyList, 
    getState: getState
};
