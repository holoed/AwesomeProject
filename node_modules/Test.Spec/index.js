// Generated by psc-make version 0.6.9.5
"use strict";
var Prelude = require("Prelude");
var Control_Monad_Trans = require("Control.Monad.Trans");
var Control_Monad_State_Class = require("Control.Monad.State.Class");
var Control_Monad_Aff = require("Control.Monad.Aff");
var Data_Either = require("Data.Either");
var Control_Monad_State_Trans = require("Control.Monad.State.Trans");
var Data_Tuple = require("Data.Tuple");
var Debug_Trace = require("Debug.Trace");
var Data_Maybe = require("Data.Maybe");
var Data_Array = require("Data.Array");
var Data_String = require("Data.String");
var Control_Monad = require("Control.Monad");
var Control_Monad_State = require("Control.Monad.State");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Control_Monad_Eff_Exception = require("Control.Monad.Eff.Exception");
var Control_Monad_Extras = require("Control.Monad.Extras");
var Success = (function () {
    function Success() {

    };
    Success.value = new Success();
    return Success;
})();
var Failure = (function () {
    function Failure(value0) {
        this.value0 = value0;
    };
    Failure.create = function (value0) {
        return new Failure(value0);
    };
    return Failure;
})();
var Describe = (function () {
    function Describe(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Describe.create = function (value0) {
        return function (value1) {
            return new Describe(value0, value1);
        };
    };
    return Describe;
})();
var It = (function () {
    function It(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    It.create = function (value0) {
        return function (value1) {
            return new It(value0, value1);
        };
    };
    return It;
})();
var Pending = (function () {
    function Pending(value0) {
        this.value0 = value0;
    };
    Pending.create = function (value0) {
        return new Pending(value0);
    };
    return Pending;
})();
var showResult = new Prelude.Show(function (_620) {
    if (_620 instanceof Success) {
        return "Success";
    };
    if (_620 instanceof Failure) {
        return "Failure (Error ...)";
    };
    throw new Error("Failed pattern match");
});
var showGroup = new Prelude.Show(function (_623) {
    if (_623 instanceof Describe) {
        return "Describe " + (Prelude.show(Prelude.showString)(_623.value0) + (" " + Prelude.show(Prelude.showArray(showGroup))(_623.value1)));
    };
    if (_623 instanceof It) {
        return "It " + (Prelude.show(Prelude.showString)(_623.value0) + (" " + Prelude.show(showResult)(_623.value1)));
    };
    if (_623 instanceof Pending) {
        return "Describe " + Prelude.show(Prelude.showString)(_623.value0);
    };
    throw new Error("Failed pattern match");
});
var runCatch = function (name) {
    return function (tests) {
        var onSuccess = function (_626) {
            return Prelude["return"](Control_Monad_Aff.monadAff)(new It(name, Success.value));
        };
        var onError = function (e) {
            return Prelude["return"](Control_Monad_Aff.monadAff)(It.create(name)(new Failure(e)));
        };
        return Prelude[">>="](Control_Monad_Aff.bindAff)(Control_Monad_Aff.attempt(tests))(function (_59) {
            return Data_Either.either(onError)(onSuccess)(_59);
        });
    };
};
var pending = function (name) {
    return Control_Monad_State_Class.modify(Control_Monad_State_Trans.monadStateT(Control_Monad_Aff.monadAff))(Control_Monad_State_Class.monadStateStateT(Control_Monad_Aff.monadAff))(function (p) {
        return Prelude["++"](Data_Array.semigroupArray)(p)([ new Pending(name) ]);
    });
};
var it = function (description) {
    return function (tests) {
        return Prelude[">>="](Control_Monad_State_Trans.bindStateT(Control_Monad_Aff.monadAff))(Control_Monad_Trans.lift(Control_Monad_State_Trans.monadTransStateT)(Control_Monad_Aff.monadAff)(runCatch(description)(tests)))(function (_60) {
            return Prelude[">>="](Control_Monad_State_Trans.bindStateT(Control_Monad_Aff.monadAff))(Control_Monad_State_Class.modify(Control_Monad_State_Trans.monadStateT(Control_Monad_Aff.monadAff))(Control_Monad_State_Class.monadStateStateT(Control_Monad_Aff.monadAff))(function (p) {
                return Prelude["++"](Data_Array.semigroupArray)(p)([ _60 ]);
            }))(function () {
                return Prelude["return"](Control_Monad_State_Trans.monadStateT(Control_Monad_Aff.monadAff))(Prelude.unit);
            });
        });
    };
};
var eqResult = new Prelude.Eq(function (r1) {
    return function (r2) {
        return !Prelude["=="](eqResult)(r1)(r2);
    };
}, function (_621) {
    return function (_622) {
        if (_621 instanceof Success && _622 instanceof Success) {
            return true;
        };
        if (_621 instanceof Failure && _622 instanceof Failure) {
            return true;
        };
        return false;
    };
});
var eqGroup = new Prelude.Eq(function (r1) {
    return function (r2) {
        return !Prelude["=="](eqGroup)(r1)(r2);
    };
}, function (_624) {
    return function (_625) {
        if (_624 instanceof Describe && _625 instanceof Describe) {
            return _624.value0 === _625.value0 && Prelude["=="](Prelude.eqArray(eqGroup))(_624.value1)(_625.value1);
        };
        if (_624 instanceof It && _625 instanceof It) {
            return _624.value0 === _625.value0 && Prelude["=="](eqResult)(_624.value1)(_625.value1);
        };
        if (_624 instanceof Pending && _625 instanceof Pending) {
            return _624.value0 === _625.value0;
        };
        return false;
    };
});
var collect = function (r) {
    return Prelude[">>="](Control_Monad_Aff.bindAff)(Control_Monad_State_Trans.runStateT(r)([  ]))(function (_61) {
        return Prelude["return"](Control_Monad_Aff.monadAff)(Data_Tuple.snd(_61));
    });
};
var describe = function (name) {
    return function (its) {
        return Prelude[">>="](Control_Monad_State_Trans.bindStateT(Control_Monad_Aff.monadAff))(Control_Monad_Trans.lift(Control_Monad_State_Trans.monadTransStateT)(Control_Monad_Aff.monadAff)(collect(its)))(function (_58) {
            return Prelude[">>="](Control_Monad_State_Trans.bindStateT(Control_Monad_Aff.monadAff))(Control_Monad_State_Class.modify(Control_Monad_State_Trans.monadStateT(Control_Monad_Aff.monadAff))(Control_Monad_State_Class.monadStateStateT(Control_Monad_Aff.monadAff))(function (r) {
                return Prelude["++"](Data_Array.semigroupArray)(r)([ new Describe(name, _58) ]);
            }))(function () {
                return Prelude["return"](Control_Monad_State_Trans.monadStateT(Control_Monad_Aff.monadAff))(Prelude.unit);
            });
        });
    };
};
module.exports = {
    Describe: Describe, 
    It: It, 
    Pending: Pending, 
    Success: Success, 
    Failure: Failure, 
    collect: collect, 
    it: it, 
    pending: pending, 
    describe: describe, 
    showResult: showResult, 
    eqResult: eqResult, 
    showGroup: showGroup, 
    eqGroup: eqGroup
};
