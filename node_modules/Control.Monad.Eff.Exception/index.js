// Generated by psc-make version 0.6.9.5
"use strict";
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");

  function showErrorImpl(err) {
    return err.stack || err.toString();
  }
  ;

  function error(msg) {
    return new Error(msg);
  }
  ;

  function message(e) {
    return e.message;
  }
  ;

  function throwException(e) {
    return function() {
      throw e;
    };
  }
  ;

  function catchException(c) {
    return function(t) {
      return function() {
        try {
          return t();
        } catch(e) {
          if (e instanceof Error || Object.prototype.toString.call(e) === '[object Error]') {
            return c(e)();
          } else {
            return c(new Error(e.toString()))();
          }
        }
      };
    };
  }
  ;
var showError = new Prelude.Show(showErrorImpl);
module.exports = {
    catchException: catchException, 
    throwException: throwException, 
    message: message, 
    error: error, 
    showError: showError
};
