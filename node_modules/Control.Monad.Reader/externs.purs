-- Generated by psc-make version 0.6.9.5
module Control.Monad.Reader where
import Prelude ()
import Data.Identity ()
import Control.Monad.Reader.Trans ()
import Prim ()
import Prelude ()
import Control.Monad.Reader.Trans ()
import Data.Identity ()
type Reader (r :: *) = Control.Monad.Reader.Trans.ReaderT r Data.Identity.Identity
foreign import mapReader :: forall r a b. (a -> b) -> Control.Monad.Reader.Reader r a -> Control.Monad.Reader.Reader r b
foreign import withReader :: forall r1 r2 a b. (r2 -> r1) -> Control.Monad.Reader.Reader r1 a -> Control.Monad.Reader.Reader r2 a
foreign import runReader :: forall r a. Control.Monad.Reader.Reader r a -> r -> a
