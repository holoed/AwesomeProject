// Generated by psc-make version 0.6.9.5
"use strict";
var Prelude = require("Prelude");
var Control_Monad_Reader_Trans = require("Control.Monad.Reader.Trans");
var Control_Monad_Trans = require("Control.Monad.Trans");
var Control_Monad_Error_Trans = require("Control.Monad.Error.Trans");
var Control_Monad_Maybe_Trans = require("Control.Monad.Maybe.Trans");
var Control_Monad_Writer_Trans = require("Control.Monad.Writer.Trans");
var Control_Monad_State_Trans = require("Control.Monad.State.Trans");
var Control_Monad_RWS = require("Control.Monad.RWS");
var Control_Monad_Error = require("Control.Monad.Error");
var Control_Monad_RWS_Trans = require("Control.Monad.RWS.Trans");
var Data_Monoid = require("Data.Monoid");
var MonadReader = function (ask, local) {
    this.ask = ask;
    this.local = local;
};
var monadReaderReaderT = function (__dict_Monad_0) {
    return new MonadReader(Prelude["return"](__dict_Monad_0), Control_Monad_Reader_Trans.withReaderT);
};
var monadReaderRWST = function (__dict_Monad_1) {
    return function (__dict_Monoid_2) {
        return new MonadReader(Control_Monad_RWS.ask(__dict_Monad_1["__superclass_Prelude.Applicative_0"]())(__dict_Monoid_2), Control_Monad_RWS.local);
    };
};
var monadReaderFun = new MonadReader(Prelude.id(Prelude.categoryArr), Prelude[">>>"](Prelude.semigroupoidArr));
var local = function (dict) {
    return dict.local;
};
var ask = function (dict) {
    return dict.ask;
};
var monadReaderErrorT = function (__dict_Monad_3) {
    return function (__dict_Error_4) {
        return function (__dict_MonadReader_5) {
            return new MonadReader(Control_Monad_Trans.lift(Control_Monad_Error_Trans.monadTransErrorT(__dict_Error_4))(__dict_Monad_3)(ask(__dict_MonadReader_5)), function (f) {
                return Control_Monad_Error_Trans.mapErrorT(local(__dict_MonadReader_5)(f));
            });
        };
    };
};
var monadReaderMaybeT = function (__dict_Monad_6) {
    return function (__dict_MonadReader_7) {
        return new MonadReader(Control_Monad_Trans.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)(__dict_Monad_6)(ask(__dict_MonadReader_7)), function (f) {
            return Control_Monad_Maybe_Trans.mapMaybeT(local(__dict_MonadReader_7)(f));
        });
    };
};
var monadReaderStateT = function (__dict_Monad_8) {
    return function (__dict_MonadReader_9) {
        return new MonadReader(Control_Monad_Trans.lift(Control_Monad_State_Trans.monadTransStateT)(__dict_Monad_8)(ask(__dict_MonadReader_9)), function (f) {
            return Control_Monad_State_Trans.mapStateT(local(__dict_MonadReader_9)(f));
        });
    };
};
var monadReaderWriterT = function (__dict_Monad_10) {
    return function (__dict_Monoid_11) {
        return function (__dict_MonadReader_12) {
            return new MonadReader(Control_Monad_Trans.lift(Control_Monad_Writer_Trans.monadTransWriterT(__dict_Monoid_11))(__dict_Monad_10)(ask(__dict_MonadReader_12)), function (f) {
                return Control_Monad_Writer_Trans.mapWriterT(local(__dict_MonadReader_12)(f));
            });
        };
    };
};
var reader = function (__dict_Monad_13) {
    return function (__dict_MonadReader_14) {
        return function (f) {
            return Prelude[">>="](__dict_Monad_13["__superclass_Prelude.Bind_1"]())(ask(__dict_MonadReader_14))(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["return"](__dict_Monad_13))(f));
        };
    };
};
module.exports = {
    MonadReader: MonadReader, 
    reader: reader, 
    local: local, 
    ask: ask, 
    monadReaderFun: monadReaderFun, 
    monadReaderReaderT: monadReaderReaderT, 
    monadReaderErrorT: monadReaderErrorT, 
    monadReaderMaybeT: monadReaderMaybeT, 
    monadReaderWriterT: monadReaderWriterT, 
    monadReaderStateT: monadReaderStateT, 
    monadReaderRWST: monadReaderRWST
};
