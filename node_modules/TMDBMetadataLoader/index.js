// Generated by psc-make version 0.6.9.5
"use strict";
var Prelude = require("Prelude");
var Data_String = require("Data.String");
var Data_Maybe_Unsafe = require("Data.Maybe.Unsafe");
var Data_Map = require("Data.Map");
var HttpClient = require("HttpClient");
var Config = require("Config");
var Data_Traversable = require("Data.Traversable");
var Data_Array = require("Data.Array");
var Data_Array_Unsafe = require("Data.Array.Unsafe");
var Data_Function = require("Data.Function");
var Data_Either = require("Data.Either");
var Control_Bind = require("Control.Bind");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Control_Monad_Trans = require("Control.Monad.Trans");
var Control_Monad_Cont_Trans = require("Control.Monad.Cont.Trans");
var Data_Foreign = require("Data.Foreign");
var Data_Foreign_Class = require("Data.Foreign.Class");
var Data_Foldable = require("Data.Foldable");
var Data_Tuple = require("Data.Tuple");
var replaceSpaceWithPlus = Prelude["<<<"](Prelude.semigroupoidArr)(Data_String.joinWith("+"))(Data_String.split(" "));
var getMyList = function (url) {
    return HttpClient.fetchUrl(url);
};
var fetchTVShowEpisode = function (episode) {
    var url = "http://api.themoviedb.org/3/tv/" + (Prelude.show(Prelude.showNumber)(episode.seriesId) + ("/season/" + (episode.season + ("/episode/" + (episode.episode + ("?api_key=" + Config.apiKey))))));
    var response = HttpClient.fetchUrl(url);
    return Prelude["<$>"](Control_Monad_Cont_Trans.functorContT(Control_Monad_Eff.monadEff))(function (details) {
        return {
            title: details.name, 
            season: Prelude.show(Prelude.showString)(details.season_number), 
            episode: Prelude.show(Prelude.showString)(details.episode_number), 
            plot: details.overview, 
            released: details.air_date, 
            source: episode.source, 
            poster: "http://image.tmdb.org/t/p/w500/" + details.still_path
        };
    })(response);
};
var fetchTVShowEpisodesDetails = function (episodesSpecs) {
    return Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_Cont_Trans.applicativeContT(Control_Monad_Eff.functorEff)(Control_Monad_Eff.monadEff))(Prelude["<$>"](Data_Array.functorArray)(fetchTVShowEpisode)(episodesSpecs));
};
var fetchTVShowsSeasonsDetails = function (tvshow) {
    var f = function (x) {
        return Prelude["<$>"](Control_Monad_Cont_Trans.functorContT(Control_Monad_Eff.monadEff))(function (eps) {
            return {
                season: x.season, 
                episodes: eps
            };
        })(fetchTVShowEpisodesDetails(Prelude["<$>"](Data_Array.functorArray)(function (v) {
            var _3216 = {};
            for (var _3217 in v) {
                if (v.hasOwnProperty(_3217)) {
                    _3216[_3217] = v[_3217];
                };
            };
            _3216.seriesId = tvshow.seriesId;
            return _3216;
        })(x.episodes)));
    };
    return Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_Cont_Trans.applicativeContT(Control_Monad_Eff.functorEff)(Control_Monad_Eff.monadEff))(Prelude["<$>"](Data_Array.functorArray)(f)(tvshow.seasons));
};
var fetchTVShow = function (tvshow) {
    var year = "&year=" + tvshow.year;
    var query = "&query=" + replaceSpaceWithPlus(tvshow.title);
    var url = "http://api.themoviedb.org/3/search/tv?api_key=" + (Config.apiKey + (query + year));
    var response = HttpClient.fetchUrl(url);
    return Prelude["<$>"](Control_Monad_Cont_Trans.functorContT(Control_Monad_Eff.monadEff))(function (details) {
        return {
            seriesId: details.id, 
            title: details.name, 
            year: details.first_air_date, 
            plot: details.overview, 
            poster: "http://image.tmdb.org/t/p/w500/" + details.poster_path, 
            seasons: [  ]
        };
    })(Prelude["<$>"](Control_Monad_Cont_Trans.functorContT(Control_Monad_Eff.monadEff))(function (x) {
        return Data_Array_Unsafe.head(x.results);
    })(response));
};
var fetchTVShowsDetails = function (tvShowsSpecs) {
    var f = function (x) {
        return Prelude[">>="](Control_Monad_Cont_Trans.bindContT(Control_Monad_Eff.monadEff))(fetchTVShow(x))(function (_68) {
            return Prelude[">>="](Control_Monad_Cont_Trans.bindContT(Control_Monad_Eff.monadEff))(fetchTVShowsSeasonsDetails((function () {
                var _3219 = {};
                for (var _3220 in x) {
                    if (x.hasOwnProperty(_3220)) {
                        _3219[_3220] = x[_3220];
                    };
                };
                _3219.seriesId = _68.seriesId;
                return _3219;
            })()))(function (_67) {
                return Prelude["return"](Control_Monad_Cont_Trans.monadContT(Control_Monad_Eff.monadEff))((function () {
                    var _3222 = {};
                    for (var _3223 in _68) {
                        if (_68.hasOwnProperty(_3223)) {
                            _3222[_3223] = _68[_3223];
                        };
                    };
                    _3222.seasons = _67;
                    return _3222;
                })());
            });
        });
    };
    return Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_Cont_Trans.applicativeContT(Control_Monad_Eff.functorEff)(Control_Monad_Eff.monadEff))(Prelude["<$>"](Data_Array.functorArray)(f)(tvShowsSpecs));
};
var fetchMovieExtraInfo = function (movieId) {
    var url = "http://api.themoviedb.org/3/movie/" + (Prelude.show(Prelude.showNumber)(movieId) + ("?api_key=" + (Config.apiKey + "&append_to_response=credits,releases")));
    var response = HttpClient.fetchUrl(url);
    return Prelude["<$>"](Control_Monad_Cont_Trans.functorContT(Control_Monad_Eff.monadEff))(function (details) {
        return {
            movieId: details.id, 
            director: Data_String.joinWith(",")(Prelude["<$>"](Data_Array.functorArray)(function (x) {
                return x.name;
            })(Data_Array.filter(function (x) {
                return x.job === "Director";
            })(details.credits.crew))), 
            writer: Data_String.joinWith(",")(Prelude["<$>"](Data_Array.functorArray)(function (x) {
                return x.name;
            })(Data_Array.filter(function (x) {
                return x.job === "Writer";
            })(details.credits.crew))), 
            actors: Data_String.joinWith(",")(Prelude["<$>"](Data_Array.functorArray)(function (x) {
                return x.name;
            })(details.credits.cast))
        };
    })(response);
};
var fetchMovie$prime = function (movie) {
    var year = "&year=" + movie.year;
    var query = "&query=" + replaceSpaceWithPlus(movie.title);
    var url = "http://api.themoviedb.org/3/search/movie?api_key=" + (Config.apiKey + (query + year));
    var response = HttpClient.fetchUrl(url);
    return Prelude["<$>"](Control_Monad_Cont_Trans.functorContT(Control_Monad_Eff.monadEff))(function (details) {
        return {
            movieId: details.id, 
            title: details.title, 
            plot: details.overview, 
            poster: "http://image.tmdb.org/t/p/w500/" + details.poster_path, 
            year: details.release_date, 
            genresIds: details.genre_ids, 
            genre: "", 
            source: movie.source, 
            director: "", 
            writer: "", 
            actors: ""
        };
    })(Prelude["<$>"](Control_Monad_Cont_Trans.functorContT(Control_Monad_Eff.monadEff))(function (x) {
        return Data_Array_Unsafe.head(x.results);
    })(response));
};
var fetchMovie = function (movie) {
    return Prelude[">>="](Control_Monad_Cont_Trans.bindContT(Control_Monad_Eff.monadEff))(fetchMovie$prime(movie))(function (_70) {
        return Prelude[">>="](Control_Monad_Cont_Trans.bindContT(Control_Monad_Eff.monadEff))(fetchMovieExtraInfo(_70.movieId))(function (_69) {
            return Prelude["return"](Control_Monad_Cont_Trans.monadContT(Control_Monad_Eff.monadEff))((function () {
                var _3226 = {};
                for (var _3227 in _70) {
                    if (_70.hasOwnProperty(_3227)) {
                        _3226[_3227] = _70[_3227];
                    };
                };
                _3226.director = _69.director;
                _3226.writer = _69.writer;
                _3226.actors = _69.actors;
                return _3226;
            })());
        });
    });
};
var fetchMoviesDetails = function (moviesSpecs) {
    return Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_Cont_Trans.applicativeContT(Control_Monad_Eff.functorEff)(Control_Monad_Eff.monadEff))(Prelude["<$>"](Data_Array.functorArray)(fetchMovie)(moviesSpecs));
};
var fetchGenreList = Prelude[">>="](Control_Monad_Cont_Trans.bindContT(Control_Monad_Eff.monadEff))(HttpClient.fetchUrl("http://api.themoviedb.org/3/genre/movie/list?api_key=" + Config.apiKey))(function (_66) {
    return Prelude["return"](Control_Monad_Cont_Trans.monadContT(Control_Monad_Eff.monadEff))(Data_Map.fromList(Prelude.ordNumber)(Prelude["<$>"](Data_Array.functorArray)(function (y) {
        return new Data_Tuple.Tuple(y.id, y.name);
    })(_66.genres)));
});
var getState = function (url) {
    return Prelude[">>="](Control_Monad_Cont_Trans.bindContT(Control_Monad_Eff.monadEff))(getMyList(url))(function (_65) {
        return Prelude[">>="](Control_Monad_Cont_Trans.bindContT(Control_Monad_Eff.monadEff))(fetchGenreList)(function (_64) {
            return Prelude[">>="](Control_Monad_Cont_Trans.bindContT(Control_Monad_Eff.monadEff))(fetchMoviesDetails(_65.movies))(function (_63) {
                return Prelude[">>="](Control_Monad_Cont_Trans.bindContT(Control_Monad_Eff.monadEff))(fetchTVShowsDetails(_65.tvshows))(function (_62) {
                    return Prelude["return"](Control_Monad_Cont_Trans.monadContT(Control_Monad_Eff.monadEff))({
                        movies: Prelude["<$>"](Data_Array.functorArray)(function (m) {
                            var _3233 = {};
                            for (var _3234 in m) {
                                if (m.hasOwnProperty(_3234)) {
                                    _3233[_3234] = m[_3234];
                                };
                            };
                            _3233.genre = Data_String.joinWith(", ")(Prelude["<$>"](Data_Array.functorArray)(function (k) {
                                return Data_Maybe_Unsafe.fromJust(Data_Map.lookup(Prelude.ordNumber)(k)(_64));
                            })(m.genresIds));
                            return _3233;
                        })(_63), 
                        tvshows: _62
                    });
                });
            });
        });
    });
};
module.exports = {
    replaceSpaceWithPlus: replaceSpaceWithPlus, 
    fetchTVShowEpisode: fetchTVShowEpisode, 
    fetchTVShow: fetchTVShow, 
    "fetchMovie'": fetchMovie$prime, 
    fetchMovie: fetchMovie, 
    fetchMovieExtraInfo: fetchMovieExtraInfo, 
    fetchTVShowEpisodesDetails: fetchTVShowEpisodesDetails, 
    fetchTVShowsSeasonsDetails: fetchTVShowsSeasonsDetails, 
    fetchTVShowsDetails: fetchTVShowsDetails, 
    fetchMoviesDetails: fetchMoviesDetails, 
    fetchGenreList: fetchGenreList, 
    getMyList: getMyList, 
    getState: getState
};
